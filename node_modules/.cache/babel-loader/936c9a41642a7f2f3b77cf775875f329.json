{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { onUnmounted } from '@vue/composition-api';\nimport AppNavbarVerticalLayout from '@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue';\nimport AppFooter from '@core/layouts/components/AppFooter.vue';\nimport useAppConfig from '@core/app-config/useAppConfig';\nimport { BNavbar } from 'bootstrap-vue';\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue';\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue';\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue';\nimport VerticalNavMenu from './components/vertical-nav-menu/VerticalNavMenu.vue';\nimport useVerticalLayout from './useVerticalLayout';\nimport mixinVerticalLayout from './mixinVerticalLayout';\nexport default {\n  components: {\n    // AppBreadcrumb,\n    AppNavbarVerticalLayout: AppNavbarVerticalLayout,\n    AppFooter: AppFooter,\n    VerticalNavMenu: VerticalNavMenu,\n    BNavbar: BNavbar,\n    LayoutContentRendererLeftDetached: LayoutContentRendererLeftDetached,\n    LayoutContentRendererLeft: LayoutContentRendererLeft,\n    LayoutContentRendererDefault: LayoutContentRendererDefault\n  },\n  mixins: [mixinVerticalLayout],\n  setup: function setup() {\n    var _useAppConfig = useAppConfig(),\n        routerTransition = _useAppConfig.routerTransition,\n        navbarBackgroundColor = _useAppConfig.navbarBackgroundColor,\n        navbarType = _useAppConfig.navbarType,\n        footerType = _useAppConfig.footerType,\n        isNavMenuHidden = _useAppConfig.isNavMenuHidden;\n\n    var _useVerticalLayout = useVerticalLayout(navbarType, footerType),\n        isVerticalMenuActive = _useVerticalLayout.isVerticalMenuActive,\n        toggleVerticalMenuActive = _useVerticalLayout.toggleVerticalMenuActive,\n        isVerticalMenuCollapsed = _useVerticalLayout.isVerticalMenuCollapsed,\n        layoutClasses = _useVerticalLayout.layoutClasses,\n        overlayClasses = _useVerticalLayout.overlayClasses,\n        resizeHandler = _useVerticalLayout.resizeHandler,\n        navbarTypeClass = _useVerticalLayout.navbarTypeClass,\n        footerTypeClass = _useVerticalLayout.footerTypeClass; // Resize handler\n\n\n    resizeHandler();\n    window.addEventListener('resize', resizeHandler);\n    onUnmounted(function () {\n      window.removeEventListener('resize', resizeHandler);\n    });\n    return {\n      isVerticalMenuActive: isVerticalMenuActive,\n      toggleVerticalMenuActive: toggleVerticalMenuActive,\n      isVerticalMenuCollapsed: isVerticalMenuCollapsed,\n      overlayClasses: overlayClasses,\n      layoutClasses: layoutClasses,\n      navbarTypeClass: navbarTypeClass,\n      footerTypeClass: footerTypeClass,\n      // App Config\n      routerTransition: routerTransition,\n      navbarBackgroundColor: navbarBackgroundColor,\n      isNavMenuHidden: isNavMenuHidden\n    };\n  },\n  computed: {\n    layoutContentRenderer: function layoutContentRenderer() {\n      var rendererType = this.$route.meta.contentRenderer;\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left';\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached';\n      return 'layout-content-renderer-default';\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACA;IACAC,gDAFA;IAGAC,oBAHA;IAIAC,gCAJA;IAKAC,gBALA;IAMAC,oEANA;IAOAC,oDAPA;IAQAC;EARA,CADA;EAWAC,6BAXA;EAYAC,KAZA,mBAYA;IACA,oBAEAC,cAFA;IAAA,IACAC,gBADA,iBACAA,gBADA;IAAA,IACAC,qBADA,iBACAA,qBADA;IAAA,IACAC,UADA,iBACAA,UADA;IAAA,IACAC,UADA,iBACAA,UADA;IAAA,IACAC,eADA,iBACAA,eADA;;IAIA,yBASAC,yCATA;IAAA,IACAC,oBADA,sBACAA,oBADA;IAAA,IAEAC,wBAFA,sBAEAA,wBAFA;IAAA,IAGAC,uBAHA,sBAGAA,uBAHA;IAAA,IAIAC,aAJA,sBAIAA,aAJA;IAAA,IAKAC,cALA,sBAKAA,cALA;IAAA,IAMAC,aANA,sBAMAA,aANA;IAAA,IAOAC,eAPA,sBAOAA,eAPA;IAAA,IAQAC,eARA,sBAQAA,eARA,CALA,CAgBA;;;IACAF;IACAG;IACAC;MACAD;IACA,CAFA;IAIA;MACAR,0CADA;MAEAC,kDAFA;MAGAC,gDAHA;MAIAE,8BAJA;MAKAD,4BALA;MAMAG,gCANA;MAOAC,gCAPA;MASA;MACAb,kCAVA;MAWAC,4CAXA;MAYAG;IAZA;EAcA,CAjDA;EAkDAY;IACAC,qBADA,mCACA;MACA;MACA;MACA;MACA;IACA;EANA;AAlDA","names":["components","AppNavbarVerticalLayout","AppFooter","VerticalNavMenu","BNavbar","LayoutContentRendererLeftDetached","LayoutContentRendererLeft","LayoutContentRendererDefault","mixins","setup","useAppConfig","routerTransition","navbarBackgroundColor","navbarType","footerType","isNavMenuHidden","useVerticalLayout","isVerticalMenuActive","toggleVerticalMenuActive","isVerticalMenuCollapsed","layoutClasses","overlayClasses","resizeHandler","navbarTypeClass","footerTypeClass","window","onUnmounted","computed","layoutContentRenderer"],"sourceRoot":"src/@core/layouts/layout-vertical","sources":["LayoutVertical.vue"],"sourcesContent":["<template>\n  <div\n    class=\"vertical-layout h-100\"\n    :class=\"[layoutClasses]\"\n    :data-col=\"isNavMenuHidden ? '1-column' : null\"\n  >\n    <!-- Navbar -->\n    <b-navbar\n      :toggleable=\"false\"\n      :variant=\"navbarBackgroundColor\"\n      class=\"header-navbar navbar navbar-shadow align-items-center\"\n      :class=\"[navbarTypeClass]\"\n    >\n      <slot\n        name=\"navbar\"\n        :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\n        :navbar-background-color=\"navbarBackgroundColor\"\n        :navbar-type-class=\"[...navbarTypeClass, 'header-navbar navbar navbar-shadow align-items-center']\"\n      >\n        <app-navbar-vertical-layout :toggle-vertical-menu-active=\"toggleVerticalMenuActive\" />\n      </slot>\n    </b-navbar>\n    <!--/ Navbar -->\n\n    <!-- Vertical Nav Menu -->\n    <vertical-nav-menu\n      v-if=\"!isNavMenuHidden\"\n      :is-vertical-menu-active=\"isVerticalMenuActive\"\n      :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\n    >\n      <template #header=\"slotProps\">\n        <slot\n          name=\"vertical-menu-header\"\n          v-bind=\"slotProps\"\n        />\n      </template>\n    </vertical-nav-menu>\n    <!-- /Vertical Nav Menu -->\n\n    <!-- Vertical Nav Menu Overlay -->\n    <div\n      class=\"sidenav-overlay\"\n      :class=\"overlayClasses\"\n      @click=\"isVerticalMenuActive = false\"\n    />\n    <!-- /Vertical Nav Menu Overlay -->\n\n    <!-- Content -->\n\n    <!-- CONTENT TYPE: Left -->\n    <transition\n      :name=\"routerTransition\"\n      mode=\"out-in\"\n    >\n      <component\n        :is=\"layoutContentRenderer\"\n        :key=\"layoutContentRenderer === 'layout-content-renderer-left' ? $route.meta.navActiveLink || $route.name : null\"\n      >\n        <template\n          v-for=\"(index, name) in $scopedSlots\"\n          v-slot:[name]=\"data\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"data\"\n          />\n        </template>\n      </component>\n    </transition>\n    <!--/ Content -->\n\n    <!-- Footer -->\n    <footer\n      class=\"footer footer-light\"\n      :class=\"[footerTypeClass]\"\n    >\n      <slot name=\"footer\">\n        <app-footer />\n      </slot>\n    </footer>\n    <!-- /Footer -->\n\n    <slot name=\"customizer\" />\n  </div>\n</template>\n\n<script>\nimport { onUnmounted } from '@vue/composition-api'\nimport AppNavbarVerticalLayout from '@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue'\nimport AppFooter from '@core/layouts/components/AppFooter.vue'\nimport useAppConfig from '@core/app-config/useAppConfig'\nimport { BNavbar } from 'bootstrap-vue'\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue'\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue'\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue'\nimport VerticalNavMenu from './components/vertical-nav-menu/VerticalNavMenu.vue'\nimport useVerticalLayout from './useVerticalLayout'\nimport mixinVerticalLayout from './mixinVerticalLayout'\n\nexport default {\n  components: {\n    // AppBreadcrumb,\n    AppNavbarVerticalLayout,\n    AppFooter,\n    VerticalNavMenu,\n    BNavbar,\n    LayoutContentRendererLeftDetached,\n    LayoutContentRendererLeft,\n    LayoutContentRendererDefault,\n  },\n  mixins: [mixinVerticalLayout],\n  setup() {\n    const {\n      routerTransition, navbarBackgroundColor, navbarType, footerType, isNavMenuHidden,\n    } = useAppConfig()\n\n    const {\n      isVerticalMenuActive,\n      toggleVerticalMenuActive,\n      isVerticalMenuCollapsed,\n      layoutClasses,\n      overlayClasses,\n      resizeHandler,\n      navbarTypeClass,\n      footerTypeClass,\n    } = useVerticalLayout(navbarType, footerType)\n\n    // Resize handler\n    resizeHandler()\n    window.addEventListener('resize', resizeHandler)\n    onUnmounted(() => {\n      window.removeEventListener('resize', resizeHandler)\n    })\n\n    return {\n      isVerticalMenuActive,\n      toggleVerticalMenuActive,\n      isVerticalMenuCollapsed,\n      overlayClasses,\n      layoutClasses,\n      navbarTypeClass,\n      footerTypeClass,\n\n      // App Config\n      routerTransition,\n      navbarBackgroundColor,\n      isNavMenuHidden,\n    }\n  },\n  computed: {\n    layoutContentRenderer() {\n      const rendererType = this.$route.meta.contentRenderer\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left'\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached'\n      return 'layout-content-renderer-default'\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/themes/bordered-layout.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module"}