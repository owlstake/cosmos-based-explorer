{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { percent } from '@/libs/utils';\nimport { $themeColors } from '@themeConfig';\nimport ChartjsComponentDoughnutChart from './ChartjsComponentDoughnutChart.vue';\nexport default {\n  name: 'ChartDoughnut',\n  components: {\n    ChartjsComponentDoughnutChart: ChartjsComponentDoughnutChart\n  },\n  props: {\n    height: {\n      type: Number,\n      default: 235\n    },\n    width: {\n      type: Number,\n      default: 235\n    },\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        responsiveAnimationDuration: 500,\n        cutoutPercentage: 60,\n        legend: {\n          display: true,\n          title: {\n            display: true\n          }\n        },\n        tooltips: {\n          callbacks: {\n            label: function label(tooltipItem, data) {\n              var label = data.datasets[0].labels[tooltipItem.index] || '';\n              var value = data.datasets[0].data[tooltipItem.index];\n              var total = data.datasets[0].data.reduce(function (t, c) {\n                return t + c;\n              });\n              var output = \" \".concat(label, \" : \").concat(percent(value / total), \" %\");\n              return output;\n            }\n          },\n          // Updated default tooltip UI\n          shadowOffsetX: 1,\n          shadowOffsetY: 1,\n          shadowBlur: 8,\n          // shadowColor: chartColors.tooltipShadow,\n          backgroundColor: $themeColors.light,\n          titleFontColor: $themeColors.dark,\n          bodyFontColor: $themeColors.dark\n        }\n      }\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;AAWA;AACA;AAEA;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IASAE;MACAH,YADA;MAEAI;IAFA;EATA,CALA;EAmBAD,IAnBA,kBAmBA;IACA;MACAE;QACAC,gBADA;QAEAC,0BAFA;QAGAC,gCAHA;QAIAC,oBAJA;QAKAC;UACAC,aADA;UAEAC;YACAD;UADA;QAFA,CALA;QAWAE;UACAC;YACAC,KADA,iBACAC,WADA,EACAb,IADA,EACA;cACA;cACA;cACA;gBAAA;cAAA;cACA;cACA;YACA;UAPA,CADA;UAUA;UACAc,gBAXA;UAYAC,gBAZA;UAaAC,aAbA;UAcA;UACAC,mCAfA;UAgBAC,iCAhBA;UAiBAC;QAjBA;MAXA;IADA;EAiCA;AArDA","names":["name","components","ChartjsComponentDoughnutChart","props","height","type","default","width","data","required","options","responsive","maintainAspectRatio","responsiveAnimationDuration","cutoutPercentage","legend","display","title","tooltips","callbacks","label","tooltipItem","shadowOffsetX","shadowOffsetY","shadowBlur","backgroundColor","titleFontColor","bodyFontColor"],"sourceRoot":"src/views","sources":["ChartComponentDoughnut.vue"],"sourcesContent":["<template>\n  <chartjs-component-doughnut-chart\n    :height=\"height\"\n    :width=\"width\"\n    :data=\"data\"\n    :chart-data=\"data\"\n    :options=\"options\"\n  />\n</template>\n\n<script>\nimport { percent } from '@/libs/utils'\nimport { $themeColors } from '@themeConfig'\n\nimport ChartjsComponentDoughnutChart from './ChartjsComponentDoughnutChart.vue'\n\nexport default {\n  name: 'ChartDoughnut',\n  components: {\n    ChartjsComponentDoughnutChart,\n  },\n  props: {\n    height: {\n      type: Number,\n      default: 235,\n    },\n    width: {\n      type: Number,\n      default: 235,\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        responsiveAnimationDuration: 500,\n        cutoutPercentage: 60,\n        legend: {\n          display: true,\n          title: {\n            display: true,\n          },\n        },\n        tooltips: {\n          callbacks: {\n            label(tooltipItem, data) {\n              const label = data.datasets[0].labels[tooltipItem.index] || ''\n              const value = data.datasets[0].data[tooltipItem.index]\n              const total = data.datasets[0].data.reduce((t, c) => t + c)\n              const output = ` ${label} : ${percent(value / total)} %`\n              return output\n            },\n          },\n          // Updated default tooltip UI\n          shadowOffsetX: 1,\n          shadowOffsetY: 1,\n          shadowBlur: 8,\n          // shadowColor: chartColors.tooltipShadow,\n          backgroundColor: $themeColors.light,\n          titleFontColor: $themeColors.dark,\n          bodyFontColor: $themeColors.dark,\n        },\n      },\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}