{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ValidationProvider } from 'vee-validate';\nimport { BRow, BCol, BInputGroup, BFormInput, BFormGroup, BFormSelect, BInputGroupAppend, BFormSelectOption } from 'bootstrap-vue';\nimport { required, email, url, between, alpha, integer, password, min, digits, alphaDash, length } from '@validations';\nimport { formatToken, formatTokenDenom, getUnitAmount } from '@/libs/utils';\nexport default {\n  name: 'DepositDialogue',\n  components: {\n    BRow: BRow,\n    BCol: BCol,\n    BInputGroup: BInputGroup,\n    BFormInput: BFormInput,\n    BFormGroup: BFormGroup,\n    BFormSelect: BFormSelect,\n    BInputGroupAppend: BInputGroupAppend,\n    BFormSelectOption: BFormSelectOption,\n    ValidationProvider: ValidationProvider\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true\n    },\n    proposalTitle: {\n      type: String,\n      required: true\n    },\n    balance: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    address: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      token: null,\n      amount: '',\n      required: required,\n      password: password,\n      email: email,\n      min: min,\n      integer: integer,\n      url: url,\n      alpha: alpha,\n      between: between,\n      digits: digits,\n      length: length,\n      alphaDash: alphaDash\n    };\n  },\n  computed: {\n    msg: function msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgDeposit',\n        value: {\n          depositor: this.address,\n          proposalId: String(this.proposalId),\n          amount: [{\n            amount: getUnitAmount(this.amount, this.token),\n            denom: this.token\n          }]\n        }\n      }];\n    },\n    balanceOptions: function balanceOptions() {\n      return this.setupBalance();\n    }\n  },\n  mounted: function mounted() {\n    this.$emit('update', {\n      modalTitle: 'Deposit',\n      historyName: 'deposit'\n    });\n  },\n  methods: {\n    printDenom: function printDenom() {\n      return formatTokenDenom(this.token);\n    },\n    format: function format(v) {\n      return formatToken(v);\n    },\n    setupBalance: function setupBalance() {\n      if (this.balance && this.balance.length > 0) {\n        this.token = this.balance[0].denom;\n        return this.balance;\n      }\n\n      return [];\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA,SACAA,IADA,EACAC,IADA,EACAC,WADA,EACAC,UADA,EACAC,UADA,EACAC,WADA,EAEAC,iBAFA,EAEAC,iBAFA,QAGA,eAHA;AAIA,SACAC,QADA,EACAC,KADA,EACAC,GADA,EACAC,OADA,EACAC,KADA,EACAC,OADA,EACAC,QADA,EACAC,GADA,EACAC,MADA,EACAC,SADA,EACAC,MADA,QAEA,cAFA;AAGA,SACAC,WADA,EACAC,gBADA,EACAC,aADA,QAEA,cAFA;AAIA;EACAC,uBADA;EAEAC;IACAvB,UADA;IAEAC,UAFA;IAGAC,wBAHA;IAIAC,sBAJA;IAKAC,sBALA;IAMAC,wBANA;IAOAC,oCAPA;IAQAC,oCARA;IASAiB;EATA,CAFA;EAaAC;IACAC;MACAC,YADA;MAEAnB;IAFA,CADA;IAKAoB;MACAD,YADA;MAEAnB;IAFA,CALA;IASAqB;MACAF,WADA;MAEAG;QAAA;MAAA;IAFA,CATA;IAaAC;MACAJ,YADA;MAEAG;IAFA;EAbA,CAbA;EA+BAE,IA/BA,kBA+BA;IACA;MACAC,WADA;MAEAC,UAFA;MAIA1B,kBAJA;MAKAM,kBALA;MAMAL,YANA;MAOAM,QAPA;MAQAF,gBARA;MASAH,QATA;MAUAE,YAVA;MAWAD,gBAXA;MAYAK,cAZA;MAaAE,cAbA;MAcAD;IAdA;EAgBA,CAhDA;EAiDAkB;IACAC,GADA,iBACA;MACA;QACAC,yCADA;QAEAC;UACAC,uBADA;UAEAb,mCAFA;UAGAQ,SACA;YACAA,8CADA;YAEAM;UAFA,CADA;QAHA;MAFA;IAaA,CAfA;IAgBAC,cAhBA,4BAgBA;MACA;IACA;EAlBA,CAjDA;EAqEAC,OArEA,qBAqEA;IACA;MACAC,qBADA;MAEAC;IAFA;EAIA,CA1EA;EA2EAC;IACAC,UADA,wBACA;MACA;IACA,CAHA;IAIAC,MAJA,kBAIAC,CAJA,EAIA;MACA;IACA,CANA;IAOAC,YAPA,0BAOA;MACA;QACA;QACA;MACA;;MACA;IACA;EAbA;AA3EA","names":["BRow","BCol","BInputGroup","BFormInput","BFormGroup","BFormSelect","BInputGroupAppend","BFormSelectOption","required","email","url","between","alpha","integer","password","min","digits","alphaDash","length","formatToken","formatTokenDenom","getUnitAmount","name","components","ValidationProvider","props","proposalId","type","proposalTitle","balance","default","address","data","token","amount","computed","msg","typeUrl","value","depositor","denom","balanceOptions","mounted","modalTitle","historyName","methods","printDenom","format","v","setupBalance"],"sourceRoot":"src/views/components/OperationModal/components","sources":["GovDeposit.vue"],"sourcesContent":["<template>\n  <div>\n    <b-row>\n      <b-col>\n        <h4>{{ proposalId }}. {{ proposalTitle }}</h4>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-form-group\n          label=\"Depositor\"\n          label-for=\"Voter\"\n        >\n          <validation-provider\n            #default=\"{ errors }\"\n            rules=\"required\"\n            name=\"Voter\"\n          >\n            <b-form-input\n              v-model=\"address\"\n              readonly\n            />\n            <small class=\"text-danger\">{{ errors[0] }}</small>\n          </validation-provider>\n        </b-form-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-form-group\n          label=\"Available Token\"\n          label-for=\"Token\"\n        >\n          <validation-provider\n            #default=\"{ errors }\"\n            rules=\"required\"\n            name=\"Token\"\n          >\n            <b-form-select\n              v-model=\"token\"\n            >\n              <b-form-select-option\n                v-for=\"item in balanceOptions\"\n                :key=\"item.denom\"\n                :value=\"item.denom\"\n              >\n                {{ format(item) }}\n              </b-form-select-option>\n            </b-form-select>\n            <small class=\"text-danger\">{{ errors[0] }}</small>\n          </validation-provider>\n        </b-form-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-form-group\n          label=\"Amount\"\n          label-for=\"Amount\"\n        >\n          <validation-provider\n            v-slot=\"{ errors }\"\n            rules=\"required|regex:^([0-9\\.]+)$\"\n            name=\"amount\"\n          >\n            <b-input-group class=\"mb-25\">\n              <b-form-input\n                id=\"Amount\"\n                v-model=\"amount\"\n                :state=\"errors.length > 0 ? false:null\"\n                placeholder=\"Input a number\"\n                type=\"number\"\n              />\n              <b-input-group-append is-text>\n                {{ printDenom() }}\n              </b-input-group-append>\n            </b-input-group>\n            <small class=\"text-danger\">{{ errors[0] }}</small>\n          </validation-provider>\n        </b-form-group>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport { ValidationProvider } from 'vee-validate'\nimport {\n  BRow, BCol, BInputGroup, BFormInput, BFormGroup, BFormSelect,\n  BInputGroupAppend, BFormSelectOption,\n} from 'bootstrap-vue'\nimport {\n  required, email, url, between, alpha, integer, password, min, digits, alphaDash, length,\n} from '@validations'\nimport {\n  formatToken, formatTokenDenom, getUnitAmount,\n} from '@/libs/utils'\n\nexport default {\n  name: 'DepositDialogue',\n  components: {\n    BRow,\n    BCol,\n    BInputGroup,\n    BFormInput,\n    BFormGroup,\n    BFormSelect,\n    BInputGroupAppend,\n    BFormSelectOption,\n    ValidationProvider,\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true,\n    },\n    proposalTitle: {\n      type: String,\n      required: true,\n    },\n    balance: {\n      type: Array,\n      default: () => [],\n    },\n    address: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      token: null,\n      amount: '',\n\n      required,\n      password,\n      email,\n      min,\n      integer,\n      url,\n      alpha,\n      between,\n      digits,\n      length,\n      alphaDash,\n    }\n  },\n  computed: {\n    msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgDeposit',\n        value: {\n          depositor: this.address,\n          proposalId: String(this.proposalId),\n          amount: [\n            {\n              amount: getUnitAmount(this.amount, this.token),\n              denom: this.token,\n            },\n          ],\n        },\n      }]\n    },\n    balanceOptions() {\n      return this.setupBalance()\n    },\n  },\n  mounted() {\n    this.$emit('update', {\n      modalTitle: 'Deposit',\n      historyName: 'deposit',\n    })\n  },\n  methods: {\n    printDenom() {\n      return formatTokenDenom(this.token)\n    },\n    format(v) {\n      return formatToken(v)\n    },\n    setupBalance() {\n      if (this.balance && this.balance.length > 0) {\n        this.token = this.balance[0].denom\n        return this.balance\n      }\n      return []\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n</style>\n"]},"metadata":{},"sourceType":"module"}