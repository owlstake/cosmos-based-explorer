{"ast":null,"code":"import \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VBTooltip, BTabs, BTab, BRow, BCol, BCard, BCardFooter, BBadge, BCardTitle, BProgress, BProgressBar, BTooltip, BAvatar } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport { getLocalAccounts, getLocalChains, percent as _percent, ProposalTally, tokenFormatter } from '@/libs/utils';\nimport dayjs from 'dayjs';\nimport WalletUpgradeEvents from './WalletUpgradeEvents.vue';\nimport ObjectFieldComponent from './ObjectFieldComponent.vue';\nexport default {\n  components: {\n    BAvatar: BAvatar,\n    BTab: BTab,\n    BTabs: BTabs,\n    BRow: BRow,\n    BCol: BCol,\n    BCard: BCard,\n    BCardFooter: BCardFooter,\n    BCardTitle: BCardTitle,\n    BBadge: BBadge,\n    BProgress: BProgress,\n    BProgressBar: BProgressBar,\n    BTooltip: BTooltip,\n    WalletUpgradeEvents: WalletUpgradeEvents,\n    ObjectFieldComponent: ObjectFieldComponent\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple: Ripple\n  },\n  data: function data() {\n    return {\n      islive: true,\n      proposals: [],\n      descId: null,\n      tally: {},\n      // voters: [], // need to be query.\n      votes: [] // votes of voters\n\n    };\n  },\n  computed: {\n    list: function list() {\n      var _this = this;\n\n      return this.proposals.map(function (x) {\n        var x2 = x;\n        x2.tally = _this.tally[\"\".concat(x.chain.chain_name, \"-\").concat(x.id)] || new ProposalTally();\n        x2.votes = _this.votes.filter(function (v) {\n          return v.vote.proposal_id === x.id;\n        });\n        return x2;\n      }).sort(function (a, b) {\n        return dayjs(b.voting_start_time).unix() - dayjs(a.voting_start_time).unix();\n      });\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.islive = false;\n  },\n  methods: {\n    description: function description(v) {\n      this.descId = v === this.descId ? null : v;\n    },\n    color: function color(v) {\n      switch (v) {\n        case 'VOTE_OPTION_YES':\n          return 'success';\n\n        case 'VOTE_OPTION_NO':\n          return 'warning';\n\n        case 'VOTE_OPTION_NOWITHVETO':\n          return 'danger';\n\n        case 'VOTE_OPTION_ABSTAIN':\n          return 'info';\n\n        default:\n          return 'danger';\n      }\n    },\n    keyname: function keyname(addr) {\n      var key = Object.values(this.accounts).find(function (k) {\n        return k.address.findIndex(function (a) {\n          return a.addr === addr;\n        }) > -1;\n      });\n      return key ? key.name : addr.substring(addr.length - 6);\n    },\n    formatType: function formatType(v) {\n      var txt = String(v).replace('Proposal', '');\n      var index = txt.lastIndexOf('.');\n      return index > 0 ? txt.substring(index + 1) : txt;\n    },\n    percent: function percent(v) {\n      return _percent(v);\n    },\n    formatDate: function formatDate(v) {\n      return dayjs(v).format('YYYY-MM-DD');\n    },\n    formatToken: function formatToken(v) {\n      return tokenFormatter(v, {});\n    },\n    init: function init() {\n      var _this2 = this;\n\n      this.accounts = getLocalAccounts();\n\n      if (this.accounts) {\n        var chains = getLocalChains();\n        var toQuery = {};\n        Object.keys(this.accounts).forEach(function (acc) {\n          _this2.accounts[acc].address.forEach(function (add) {\n            var conf = chains[add.chain];\n\n            if (conf) {\n              if (toQuery[add.chain]) {\n                toQuery[add.chain].addresses.push(add.addr);\n              } else {\n                toQuery[add.chain] = {\n                  conf: conf,\n                  addresses: [add.addr]\n                };\n              }\n            }\n          });\n        });\n        Object.values(toQuery).forEach(function (item) {\n          _this2.fetchProposals(item);\n        });\n      }\n    },\n    fetchProposals: function fetchProposals(item) {\n      var _this3 = this;\n\n      if (this.islive) {\n        var promise = Promise.resolve(); // identities.forEach(item => {\n        //   promise = promise.then(() => new Promise(resolve => {\n        //     this.avatar(item, resolve)\n        //   }))\n        // })\n\n        this.$http.getGovernanceListByStatus(2, item.conf).then(function (data) {\n          data.proposals.forEach(function (p) {\n            var p2 = p;\n            p2.chain = item.conf;\n\n            _this3.proposals.push(p2);\n\n            item.addresses.forEach(function (a) {\n              // this.fetchMyVote(p.id, a, item.conf)\n              // this.voters.push({ pid: p.id, addr: a, conf: item.conf })\n              promise = promise.then(function () {\n                return new Promise(function (resolve) {\n                  _this3.fetchMyVote(p.id, a, item.conf, resolve);\n                });\n              });\n            });\n          });\n\n          _this3.updateTally(data.proposals, item.conf);\n        }, function (err) {\n          throw new Error(err);\n        });\n      }\n    },\n    fetchMyVote: function fetchMyVote(pid, addr, conf, resolve) {\n      var _this4 = this;\n\n      if (this.islive) {\n        this.$http.getGovernanceProposalVote(pid, addr, conf).then(function (data) {\n          resolve();\n          var x = data;\n          x.keyname = _this4.keyname(data.vote.voter);\n\n          _this4.votes.push(x);\n        }).catch(function () {\n          resolve();\n        });\n      }\n    },\n    updateTally: function updateTally(voting, chain) {\n      var _this5 = this;\n\n      if (voting.length > 0) {\n        voting.forEach(function (p) {\n          return _this5.$http.getGovernanceTally(p.id, 0, chain).then(function (update) {\n            _this5.$set(_this5.tally, \"\".concat(chain.chain_name, \"-\").concat(p.id), update);\n          });\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA,SACAA,SADA,EACAC,KADA,EACAC,IADA,EACAC,IADA,EACAC,IADA,EACAC,KADA,EACAC,WADA,EACAC,MADA,EAEAC,UAFA,EAEAC,SAFA,EAEAC,YAFA,EAEAC,QAFA,EAEAC,OAFA,QAGA,eAHA;AAIA;AACA,SACAC,gBADA,EACAC,cADA,EACAC,mBADA,EACAC,aADA,EACAC,cADA,QAEA,cAFA;AAGA;AACA;AACA;AAEA;EACAC;IACAN,gBADA;IAEAV,UAFA;IAGAD,YAHA;IAIAE,UAJA;IAKAC,UALA;IAMAC,YANA;IAOAC,wBAPA;IAQAE,sBARA;IASAD,cATA;IAUAE,oBAVA;IAWAC,0BAXA;IAYAC,kBAZA;IAaAQ,wCAbA;IAcAC;EAdA,CADA;EAiBAC;IACA,sBADA;IAEAC;EAFA,CAjBA;EAqBAC,IArBA,kBAqBA;IACA;MACAC,YADA;MAEAC,aAFA;MAGAC,YAHA;MAIAC,SAJA;MAKA;MACAC,SANA,CAMA;;IANA;EAQA,CA9BA;EA+BAC;IACAC,IADA,kBACA;MAAA;;MACA;QACA;QACAC;QACAA;UAAA;QAAA;QACA;MACA,CALA,EAKAC,IALA,CAKA;QAAA;MAAA,CALA;IAMA;EARA,CA/BA;EAyCAC,OAzCA,qBAyCA;IACA;EACA,CA3CA;EA4CAC,aA5CA,2BA4CA;IACA;EACA,CA9CA;EA+CAC;IACAC,WADA,uBACAC,CADA,EACA;MACA;IACA,CAHA;IAIAC,KAJA,iBAIAD,CAJA,EAIA;MACA;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MAVA;IAYA,CAjBA;IAkBAE,OAlBA,mBAkBAC,IAlBA,EAkBA;MACA;QAAA;UAAA;QAAA;MAAA;MACA;IACA,CArBA;IAsBAC,UAtBA,sBAsBAJ,CAtBA,EAsBA;MACA;MACA;MACA;IACA,CA1BA;IA2BAtB;MAAA;IAAA,CA3BA;IA4BA2B;MAAA;IAAA,CA5BA;IA6BAC;MAAA;IAAA,CA7BA;IA8BAC,IA9BA,kBA8BA;MAAA;;MACA;;MACA;QACA;QACA;QAEAC;UACA;YACA;;YACA;cACA;gBACAC;cACA,CAFA,MAEA;gBACAA;kBACAC,UADA;kBAEAC;gBAFA;cAIA;YACA;UACA,CAZA;QAaA,CAdA;QAgBAH;UACA;QACA,CAFA;MAGA;IACA,CAxDA;IAyDAI,cAzDA,0BAyDAC,IAzDA,EAyDA;MAAA;;MACA;QACA,gCADA,CAEA;QACA;QACA;QACA;QACA;;QACA;UACA3B;YACA;YACA4B;;YACA;;YACAD;cACA;cACA;cACAE;gBAAA;kBACA;gBACA,CAFA;cAAA;YAGA,CANA;UAOA,CAXA;;UAYA;QACA,CAdA,EAcA;UACA;QACA,CAhBA;MAiBA;IACA,CAnFA;IAoFAC,WApFA,uBAoFAC,GApFA,EAoFAd,IApFA,EAoFAO,IApFA,EAoFAQ,OApFA,EAoFA;MAAA;;MACA;QACA;UACAA;UACA;UACAC;;UACA;QACA,CALA,EAKAC,KALA,CAKA;UACAF;QACA,CAPA;MAQA;IACA,CA/FA;IAgGAG,WAhGA,uBAgGAC,MAhGA,EAgGAC,KAhGA,EAgGA;MAAA;;MACA;QACAD;UAAA;YACA;UACA,CAFA;QAAA;MAGA;IACA;EAtGA;AA/CA","names":["VBTooltip","BTabs","BTab","BRow","BCol","BCard","BCardFooter","BBadge","BCardTitle","BProgress","BProgressBar","BTooltip","BAvatar","getLocalAccounts","getLocalChains","percent","ProposalTally","tokenFormatter","components","WalletUpgradeEvents","ObjectFieldComponent","directives","Ripple","data","islive","proposals","descId","tally","votes","computed","list","x2","sort","created","beforeDestroy","methods","description","v","color","keyname","addr","formatType","formatDate","formatToken","init","Object","toQuery","conf","addresses","fetchProposals","item","p2","promise","fetchMyVote","pid","resolve","x","catch","updateTally","voting","chain"],"sourceRoot":"src/views","sources":["WalletVotes.vue"],"sourcesContent":["<template>\n  <b-tabs content-class=\"mt-1\">\n    <!-- This tabs content will always be mounted -->\n    <b-tab\n      title=\"Ongoing Proposals\"\n      pill\n    >\n      <b-row class=\"match-height\">\n        <b-col\n          v-for=\"(p,i) in list\"\n          :key=\"`${p.id}-${i}`\"\n          lg=\"6\"\n          md=\"12\"\n        >\n          <b-card>\n            <b-card-title @click=\"description(`model-${i}`)\">\n              <b-avatar\n                v-b-tooltip.hover\n                :src=\"p.chain.logo\"\n                variant=\"light-primary\"\n                size=\"22\"\n                :title=\"p.chain.chain_name\"\n              />\n              #{{ p.id }}.\n              <router-link :to=\"`/${p.chain.chain_name}/gov/${p.id}?from=/wallet/votes`\">\n                {{ p.title }}\n              </router-link>\n            </b-card-title>\n            <div\n              class=\"overflow-auto\"\n              :class=\"descId === `model-${i}`?'d-block': 'd-none'\"\n            >\n              <object-field-component\n                :tablefield=\"p.contents\"\n                :small=\"false\"\n              />\n            </div>\n            <div class=\"gov-wrapper d-flex flex-wrap\">\n              <div class=\"gov\">\n                <p class=\"card-text mb-25\">\n                  Type\n                </p>\n                <h6 class=\"mb-0\">\n                  {{ formatType(p.contents['@type']) }}\n                </h6>\n              </div>\n              <div class=\"gov\">\n                <p class=\"card-text mb-25\">\n                  Start Date\n                </p>\n                <h6 class=\"mb-0\">\n                  {{ formatDate(p.voting_start_time) }}\n                </h6>\n              </div>\n              <div class=\"gov\">\n                <p class=\"card-text mb-25\">\n                  End Date\n                </p>\n                <h6 class=\"mb-0\">\n                  {{ formatDate(p.voting_end_time) }}\n                </h6>\n              </div>\n              <div class=\"gov\">\n                <p class=\"card-text mb-25\">\n                  Deposit\n                </p>\n                <h6 class=\"mb-0\">\n                  {{ formatToken(p.total_deposit) || '-' }}\n                </h6>\n              </div>\n            </div>\n\n            <b-progress\n              :max=\"100\"\n              height=\"2rem\"\n              class=\"my-2\"\n              show-progress\n            >\n              <b-progress-bar\n                :id=\"'vote-yes'+p.id\"\n                variant=\"success\"\n                :value=\"percent(p.tally.yes)\"\n                show-progress\n                :label=\"`${percent(p.tally.yes).toFixed()}%`\"\n              />\n              <b-progress-bar\n                :id=\"'vote-no'+p.id\"\n                variant=\"warning\"\n                :value=\"percent(p.tally.no)\"\n                :label=\"`${percent(p.tally.no).toFixed()}%`\"\n                show-progress\n              />\n              <b-progress-bar\n                :id=\"'vote-veto'+p.id\"\n                variant=\"danger\"\n                :value=\"percent(p.tally.veto)\"\n                :label=\"`${percent(p.tally.veto).toFixed()}%`\"\n                show-progress\n              />\n              <b-progress-bar\n                :id=\"'vote-abstain'+p.id\"\n                variant=\"info\"\n                :value=\"percent(p.tally.abstain)\"\n                :label=\"`${percent(p.tally.abstain).toFixed()}%`\"\n                show-progress\n              />\n            </b-progress>\n            <b-tooltip\n              :target=\"'vote-yes'+p.id\"\n            >\n              {{ percent(p.tally.yes) }}% voted Yes\n            </b-tooltip>\n            <b-tooltip\n              :target=\"'vote-no'+p.id\"\n            >\n              {{ percent(p.tally.no) }}% voted No\n            </b-tooltip>\n            <b-tooltip\n              :target=\"'vote-veto'+p.id\"\n            >\n              {{ percent(p.tally.veto) }}% voted No With Veto\n            </b-tooltip>\n            <b-tooltip\n              :target=\"'vote-abstain'+p.id\"\n            >\n              {{ percent(p.tally.abstain) }}% voted Abstain\n            </b-tooltip>\n            <b-card-footer class=\"pb-0\">\n              <span\n                v-for=\"(v,k) in p.votes\"\n                :key=\"k\"\n              > <b-badge :variant=\"color(v.vote.option)\">{{ v.keyname }} : {{ v.vote.option }}</b-badge></span>\n            </b-card-footer>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-tab>\n\n    <!-- This tabs content will not be mounted until the tab is shown -->\n    <!-- and will be un-mounted when hidden -->\n    <b-tab\n      title=\"Upgrade Events\"\n      lazy\n    >\n      <wallet-upgrade-events />\n    </b-tab>\n  </b-tabs>\n</template>\n\n<script>\nimport {\n  VBTooltip, BTabs, BTab, BRow, BCol, BCard, BCardFooter, BBadge,\n  BCardTitle, BProgress, BProgressBar, BTooltip, BAvatar,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport {\n  getLocalAccounts, getLocalChains, percent, ProposalTally, tokenFormatter,\n} from '@/libs/utils'\nimport dayjs from 'dayjs'\nimport WalletUpgradeEvents from './WalletUpgradeEvents.vue'\nimport ObjectFieldComponent from './ObjectFieldComponent.vue'\n\nexport default {\n  components: {\n    BAvatar,\n    BTab,\n    BTabs,\n    BRow,\n    BCol,\n    BCard,\n    BCardFooter,\n    BCardTitle,\n    BBadge,\n    BProgress,\n    BProgressBar,\n    BTooltip,\n    WalletUpgradeEvents,\n    ObjectFieldComponent,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  data() {\n    return {\n      islive: true,\n      proposals: [],\n      descId: null,\n      tally: {},\n      // voters: [], // need to be query.\n      votes: [], // votes of voters\n    }\n  },\n  computed: {\n    list() {\n      return this.proposals.map(x => {\n        const x2 = x\n        x2.tally = this.tally[`${x.chain.chain_name}-${x.id}`] || new ProposalTally()\n        x2.votes = this.votes.filter(v => v.vote.proposal_id === x.id)\n        return x2\n      }).sort((a, b) => dayjs(b.voting_start_time).unix() - dayjs(a.voting_start_time).unix())\n    },\n  },\n  created() {\n    this.init()\n  },\n  beforeDestroy() {\n    this.islive = false\n  },\n  methods: {\n    description(v) {\n      this.descId = v === this.descId ? null : v\n    },\n    color(v) {\n      switch (v) {\n        case 'VOTE_OPTION_YES':\n          return 'success'\n        case 'VOTE_OPTION_NO':\n          return 'warning'\n        case 'VOTE_OPTION_NOWITHVETO':\n          return 'danger'\n        case 'VOTE_OPTION_ABSTAIN':\n          return 'info'\n        default:\n          return 'danger'\n      }\n    },\n    keyname(addr) {\n      const key = Object.values(this.accounts).find(k => k.address.findIndex(a => a.addr === addr) > -1)\n      return key ? key.name : addr.substring(addr.length - 6)\n    },\n    formatType(v) {\n      const txt = String(v).replace('Proposal', '')\n      const index = txt.lastIndexOf('.')\n      return index > 0 ? txt.substring(index + 1) : txt\n    },\n    percent: v => percent(v),\n    formatDate: v => dayjs(v).format('YYYY-MM-DD'),\n    formatToken: v => tokenFormatter(v, {}),\n    init() {\n      this.accounts = getLocalAccounts()\n      if (this.accounts) {\n        const chains = getLocalChains()\n        const toQuery = {}\n\n        Object.keys(this.accounts).forEach(acc => {\n          this.accounts[acc].address.forEach(add => {\n            const conf = chains[add.chain]\n            if (conf) {\n              if (toQuery[add.chain]) {\n                toQuery[add.chain].addresses.push(add.addr)\n              } else {\n                toQuery[add.chain] = {\n                  conf,\n                  addresses: [add.addr],\n                }\n              }\n            }\n          })\n        })\n\n        Object.values(toQuery).forEach(item => {\n          this.fetchProposals(item)\n        })\n      }\n    },\n    fetchProposals(item) {\n      if (this.islive) {\n        let promise = Promise.resolve()\n        // identities.forEach(item => {\n        //   promise = promise.then(() => new Promise(resolve => {\n        //     this.avatar(item, resolve)\n        //   }))\n        // })\n        this.$http.getGovernanceListByStatus(2, item.conf).then(data => {\n          data.proposals.forEach(p => {\n            const p2 = p\n            p2.chain = item.conf\n            this.proposals.push(p2)\n            item.addresses.forEach(a => {\n              // this.fetchMyVote(p.id, a, item.conf)\n              // this.voters.push({ pid: p.id, addr: a, conf: item.conf })\n              promise = promise.then(() => new Promise(resolve => {\n                this.fetchMyVote(p.id, a, item.conf, resolve)\n              }))\n            })\n          })\n          this.updateTally(data.proposals, item.conf)\n        }, err => {\n          throw new Error(err)\n        })\n      }\n    },\n    fetchMyVote(pid, addr, conf, resolve) {\n      if (this.islive) {\n        this.$http.getGovernanceProposalVote(pid, addr, conf).then(data => {\n          resolve()\n          const x = data\n          x.keyname = this.keyname(data.vote.voter)\n          this.votes.push(x)\n        }).catch(() => {\n          resolve()\n        })\n      }\n    },\n    updateTally(voting, chain) {\n      if (voting.length > 0) {\n        voting.forEach(p => this.$http.getGovernanceTally(p.id, 0, chain).then(update => {\n          this.$set(this.tally, `${chain.chain_name}-${p.id}`, update)\n        }))\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\nsection {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n.card {\n  flex-basis: 49%;\n}\n.gov-wrapper {\n    display: flex;\n    justify-content:center;\n}\n.dark-layout .gov-wrapper .gov {\n    background-color: #161d31;\n}\n.gov-wrapper .gov {\n    padding: .5rem;\n    margin: .3rem;\n    min-width: 7.5rem;\n    text-align: center;\n    background-color: #f8f8f8;\n    border-radius: .357rem;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}