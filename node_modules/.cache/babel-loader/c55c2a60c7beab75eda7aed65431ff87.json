{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardTitle, VBTooltip } from 'bootstrap-vue';\nimport { formatTokenDenom } from '@/libs/utils'; // import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard: BCard,\n    BCardTitle: BCardTitle\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      pools: [],\n      ibcDenom: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.getGravityPools().then(function (res) {\n      _this.pools = res;\n      res.pools.forEach(function (x) {\n        var denom1 = x.reserve_coin_denoms[0];\n        var denom2 = x.reserve_coin_denoms[1];\n\n        if (denom1.startsWith('ibc')) {\n          _this.$http.getIBCDenomTrace(denom1).then(function (denom) {\n            _this.$set(_this.ibcDenom, denom1, denom);\n          });\n        }\n\n        if (denom2.startsWith('ibc')) {\n          _this.$http.getIBCDenomTrace(denom2).then(function (denom) {\n            _this.$set(_this.ibcDenom, denom2, denom);\n          });\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.islive = false;\n    clearInterval(this.timer);\n  },\n  methods: {\n    formatDenom: function formatDenom(v) {\n      // console.log(v, this.ibcDenom[v])\n      var denom = v.startsWith('ibc') ? this.ibcDenom[v].denom_trace.base_denom : v;\n      return formatTokenDenom(denom);\n    },\n    length: function length(v) {\n      return Array.isArray(v) ? v.length : 0;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SACAA,KADA,EACAC,UADA,EACAC,SADA,QAEA,eAFA;AAGA,gD,CACA;;AAEA;EACAC;IACAH,YADA;IAEAC;EAFA,CADA;EAKAG;IACA;EADA,CALA;EAQAC,IARA,kBAQA;IACA;MACAC,SADA;MAEAC;IAFA;EAIA,CAbA;EAcAC,OAdA,qBAcA;IAAA;;IACA;MACA;MACAC;QACA;QACA;;QACA;UACA;YACA;UACA,CAFA;QAGA;;QACA;UACA;YACA;UACA,CAFA;QAGA;MACA,CAbA;IAcA,CAhBA;EAiBA,CAhCA;EAiCAC,aAjCA,2BAiCA;IACA;IACAC;EACA,CApCA;EAqCAC;IACAC,WADA,uBACAC,CADA,EACA;MACA;MACA;MACA;IACA,CALA;IAMAC;MAAA;IAAA;EANA;AArCA","names":["BCard","BCardTitle","VBTooltip","components","directives","data","pools","ibcDenom","created","res","beforeDestroy","clearInterval","methods","formatDenom","v","length"],"sourceRoot":"src/views","sources":["GravityPool.vue"],"sourcesContent":["<template>\n  <div class=\"container-md\">\n    <b-row class=\"match-height\">\n      <b-col\n        v-for=\"(data,index) in pools.pools\"\n        :key=\"index\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <router-link :to=\"data.id\">\n          <b-card\n            v-if=\"data\"\n            class=\"earnings-card text-left\"\n          >\n            <b-row>\n              <b-col cols=\"8\">\n                <b-card-title class=\"mb-1 text-uppercase\">\n                  #{{ data.id }} {{ formatDenom(data.reserve_coin_denoms[0]) }} - {{ formatDenom(data.reserve_coin_denoms[1]) }}<small class=\"font-small-2\"> xx</small>\n                </b-card-title>\n                <div class=\"font-small-2\">\n                  Height\n                </div>\n                <h5 class=\"mb-1\">\n                  {{ data.height || '0' }}\n                </h5>\n                <b-card-text class=\"text-muted font-small-2\">\n                  <span class=\"font-weight-bolder\">{{ data.pool_coin_denom || '...' }}</span>\n                </b-card-text>\n              </b-col>\n              <b-col\n                cols=\"4\"\n              >\n                <b-avatar\n                  :src=\"data.logo\"\n                  class=\"mt-1 badge-minimal\"\n                  variant=\"light-primary\"\n                  rounded\n                  size=\"82\"\n                  badge\n                  :badge-variant=\"data.variant\"\n                /></b-col>\n            </b-row>\n          </b-card>\n        </router-link>\n      </b-col>\n\n      <!-- no result found -->\n      <b-col\n        v-show=\"!chains\"\n        cols=\"12\"\n        class=\"text-center\"\n      >\n        <h4 class=\"mt-4\">\n          No blockchain found!!\n        </h4>\n      </b-col>\n      <!--/ no result found -->\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport {\n  BCard, BCardTitle, VBTooltip,\n} from 'bootstrap-vue'\nimport { formatTokenDenom } from '@/libs/utils'\n// import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard,\n    BCardTitle,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n  },\n  data() {\n    return {\n      pools: [],\n      ibcDenom: {},\n    }\n  },\n  created() {\n    this.$http.getGravityPools().then(res => {\n      this.pools = res\n      res.pools.forEach(x => {\n        const denom1 = x.reserve_coin_denoms[0]\n        const denom2 = x.reserve_coin_denoms[1]\n        if (denom1.startsWith('ibc')) {\n          this.$http.getIBCDenomTrace(denom1).then(denom => {\n            this.$set(this.ibcDenom, denom1, denom)\n          })\n        }\n        if (denom2.startsWith('ibc')) {\n          this.$http.getIBCDenomTrace(denom2).then(denom => {\n            this.$set(this.ibcDenom, denom2, denom)\n          })\n        }\n      })\n    })\n  },\n  beforeDestroy() {\n    this.islive = false\n    clearInterval(this.timer)\n  },\n  methods: {\n    formatDenom(v) {\n      // console.log(v, this.ibcDenom[v])\n      const denom = (v.startsWith('ibc') ? this.ibcDenom[v].denom_trace.base_denom : v)\n      return formatTokenDenom(denom)\n    },\n    length: v => (Array.isArray(v) ? v.length : 0),\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}