{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BRow, BCol, BCard, BButton, BPopover, BTable, BSpinner } from 'bootstrap-vue';\nimport { CoinGeckoMap, getPairName } from '@/libs/osmos';\nimport { formatTokenDenom } from '@/libs/utils';\nimport FeatherIcon from '@/@core/components/feather-icon/FeatherIcon.vue';\nimport Place from './components/KlineTrade/Place.vue'; // import Kline from './components/kline/index.vue'\n\nimport SummaryPriceChart from './SummaryPriceChart.vue';\nexport default {\n  components: {\n    BRow: BRow,\n    BCol: BCol,\n    BButton: BButton,\n    BPopover: BPopover,\n    BTable: BTable,\n    BSpinner: BSpinner,\n    Place: Place,\n    BCard: BCard,\n    SummaryPriceChart: SummaryPriceChart,\n    FeatherIcon: FeatherIcon\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    var poolid = to.params.poolid;\n    this.init(poolid);\n    next(); // }\n  },\n  data: function data() {\n    return {\n      loading: true,\n      error: '',\n      base: '',\n      target: '',\n      fields: ['pair', 'price', 'change'],\n      show: false,\n      pools: [],\n      current: {},\n      denomTrace: [],\n      klineData: [],\n      marketData: {},\n      high24: 0,\n      low24: 0\n    };\n  },\n  computed: {\n    pairs: function pairs() {\n      var _this = this;\n\n      var pairs = this.pools.map(function (x) {\n        var pair = x.poolAssets.map(function (t) {\n          if (t.token.denom.startsWith('ibc/')) {\n            return formatTokenDenom(_this.denomTrace[t.token.denom] ? _this.denomTrace[t.token.denom].base_denom : ' ');\n          }\n\n          return formatTokenDenom(t.token.denom);\n        });\n        return {\n          id: x.id,\n          pair: pair,\n          price: _this.getPrice(pair),\n          change: _this.getChanges(pair)\n        };\n      });\n      return pairs;\n    },\n    latestPrice: function latestPrice() {\n      return this.getPrice([this.base, this.target]);\n    },\n    changesIn24H: function changesIn24H() {\n      return this.getChanges([this.base, this.target]);\n    },\n    marketChartData: function marketChartData() {\n      if (this.marketData && this.marketData.prices) {\n        var labels = this.marketData.prices.map(function (x) {\n          return x[0];\n        });\n        var data = this.marketData.prices.map(function (x) {\n          return x[1];\n        });\n        return {\n          labels: labels,\n          datasets: [{\n            label: 'Price',\n            data: data,\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n            pointStyle: 'dash',\n            barThickness: 15\n          }]\n        };\n      }\n\n      return {\n        labels: [],\n        datasets: []\n      };\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    var poolid = this.$route.params.poolid;\n    this.$http.osmosis.getDenomTraces().then(function (x) {\n      _this2.denomTrace = x;\n\n      _this2.$http.osmosis.getPools().then(function (pools) {\n        _this2.pools = pools;\n\n        _this2.init(poolid);\n      });\n    });\n  },\n  methods: {\n    getPrice: function getPrice(symbol) {\n      var p1 = this.$store.state.chains.quotes[symbol[0]];\n      var p2 = this.$store.state.chains.quotes[symbol[1]];\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-';\n    },\n    getChanges: function getChanges(symbol) {\n      var p1 = this.$store.state.chains.quotes[symbol[0]];\n      var p2 = this.$store.state.chains.quotes[symbol[1]];\n      return p1 && p2 ? (p1.usd_24h_change / p2.usd_24h_change).toFixed(2) : '-';\n    },\n    init: function init(poolid) {\n      var _this3 = this;\n\n      this.high24 = 0;\n      this.low24 = 0;\n      this.current = this.pools.find(function (p) {\n        return p.id === poolid;\n      }) || this.pools[0];\n      this.base = getPairName(this.current, this.denomTrace, 'base');\n      this.target = getPairName(this.current, this.denomTrace, 'target');\n      this.$http.osmosis.getMarketData(CoinGeckoMap[this.base], CoinGeckoMap[this.target]).then(function (res) {\n        _this3.marketData = res;\n        _this3.loading = false;\n        var start = Date.now() - 8.64e+7;\n        res.prices.forEach(function (x) {\n          if (x[0] > start) {\n            if (x[1] > _this3.high24) {\n              // eslint-disable-next-line prefer-destructuring\n              _this3.high24 = x[1];\n            }\n\n            if (x[1] < _this3.low24 || _this3.low24 === 0) {\n              // eslint-disable-next-line prefer-destructuring\n              _this3.low24 = x[1];\n            }\n          }\n        });\n      }).catch(function (e) {\n        _this3.error = \"This feature is not avalable in your country. \\n\\u8FD9\\u4E2A\\u529F\\u80FD\\u5C1A\\u672A\\u5BF9\\u4F60\\u7684\\u56FD\\u5BB6\\u5F00\\u653E\\u3002\".concat(e);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA,SACAA,IADA,EACAC,IADA,EACAC,KADA,EACAC,OADA,EACAC,QADA,EACAC,MADA,EACAC,QADA,QAEA,eAFA;AAGA;AACA;AACA;AACA,sD,CACA;;AACA;AAEA;EACAC;IACAP,UADA;IAEAC,UAFA;IAGAE,gBAHA;IAIAC,kBAJA;IAKAC,cALA;IAMAC,kBANA;IAOAE,YAPA;IAQAN,YARA;IASAO,oCATA;IAUAC;EAVA,CADA;EAaAC,iBAbA,6BAaAC,EAbA,EAaAC,IAbA,EAaAC,IAbA,EAaA;IACA;IACA;IACAA,OAHA,CAIA;EACA,CAlBA;EAmBAC,IAnBA,kBAmBA;IACA;MACAC,aADA;MAEAC,SAFA;MAGAC,QAHA;MAIAC,UAJA;MAKAC,mCALA;MAMAC,WANA;MAOAC,SAPA;MAQAC,WARA;MASAC,cATA;MAUAC,aAVA;MAWAC,cAXA;MAYAC,SAZA;MAaAC;IAbA;EAeA,CAnCA;EAoCAC;IACAC,KADA,mBACA;MAAA;;MACA;QACA;UACA;YACA;UACA;;UACA;QACA,CALA;QAMA;UACAC,QADA;UAEAC,UAFA;UAGAC,2BAHA;UAIAC;QAJA;MAMA,CAbA;MAcA;IACA,CAjBA;IAkBAC,WAlBA,yBAkBA;MACA;IACA,CApBA;IAqBAC,YArBA,0BAqBA;MACA;IACA,CAvBA;IAwBAC,eAxBA,6BAwBA;MACA;QACA;UAAA;QAAA;QACA;UAAA;QAAA;QACA;UACAC,cADA;UAEAC,WACA;YACAC,cADA;YAEAzB,UAFA;YAGA0B,0CAHA;YAIAC,oCAJA;YAKAC,cALA;YAMAC,kBANA;YAOAC;UAPA,CADA;QAFA;MAcA;;MACA;QAAAP;QAAAC;MAAA;IACA;EA5CA,CApCA;EAkFAO,OAlFA,qBAkFA;IAAA;;IACA;IACA;MACA;;MACA;QACA;;QACA;MACA,CAHA;IAIA,CANA;EAOA,CA3FA;EA4FAC;IACAC,QADA,oBACAC,MADA,EACA;MACA;MACA;MACA;IACA,CALA;IAMAC,UANA,sBAMAD,MANA,EAMA;MACA;MACA;MACA;IACA,CAVA;IAWAE,IAXA,gBAWAC,MAXA,EAWA;MAAA;;MACA;MACA;MACA;QAAA;MAAA;MACA;MACA;MACA;QACA;QACA;QACA;QACAC;UACA;YACA;cACA;cACA;YACA;;YACA;cACA;cACA;YACA;UACA;QACA,CAXA;MAYA,CAhBA,EAgBAC,KAhBA,CAgBA;QACA;MACA,CAlBA;IAmBA;EApCA;AA5FA","names":["BRow","BCol","BCard","BButton","BPopover","BTable","BSpinner","components","Place","SummaryPriceChart","FeatherIcon","beforeRouteUpdate","to","from","next","data","loading","error","base","target","fields","show","pools","current","denomTrace","klineData","marketData","high24","low24","computed","pairs","id","pair","price","change","latestPrice","changesIn24H","marketChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointStyle","barThickness","created","methods","getPrice","symbol","getChanges","init","poolid","res","catch"],"sourceRoot":"src/views","sources":["OsmosisTrade.vue"],"sourcesContent":["<template>\n  <div className=\"container-md\">\n    <b-row class=\"match-height\">\n      <b-col\n        md=\"8\"\n        sm=\"12\"\n      >\n        <b-card>\n          <b-row class=\"mb-1\">\n            <b-col\n              lg=\"4\"\n              md=\"6\"\n              sm=\"12\"\n              class=\"d-flex justify-content-begin align-items-center\"\n            >\n              <b-button\n                id=\"popover-trading-pairs\"\n                variant=\"gradient-primary\"\n              >\n                <feather-icon\n                  icon=\"ListIcon\"\n                />\n              </b-button>\n              <h4 class=\"text-primary font-weight-bolder text-nowrap ml-1\">\n                {{ base }} / {{ target }}\n              </h4>\n              <b-popover\n                target=\"popover-trading-pairs\"\n                placement=\"rightbottom\"\n                triggers=\"hover\"\n                boundary=\"scrollParent\"\n                boundary-padding=\"0\"\n                class=\"px-0\"\n              >\n                <b-table\n                  striped\n                  hover\n                  :fields=\"fields\"\n                  :small=\"true\"\n                  :items=\"pairs\"\n                  class=\"ml-0 pl-0\"\n                >\n\n                  <template #cell(pair)=\"data\">\n                    <router-link\n                      :to=\"`/osmosis/osmosis/trade/${data.item.id}`\"\n                    >\n                      {{ data.item.pair[0] }}/{{ data.item.pair[1] }}\n                    </router-link>\n                  </template>\n                  <template #cell(price)=\"data\">\n                    <div class=\"text-right\">\n                      <small class=\"\">{{ data.item.price }}</small>\n                    </div>\n                  </template>\n                  <template #cell(change)=\"data\">\n                    <div class=\"text-right\">\n                      <small :class=\"data.item.change > 0 ? 'text-success': 'text-danger'\">{{ data.item.change }}%</small>\n                    </div>\n                  </template>\n                </b-table>\n              </b-popover>\n            </b-col>\n            <b-col class=\"d-flex justify-content-begin align-items-center\">\n              <div class=\"mr-3 text-success font-weight-bolder\">\n                {{ latestPrice }}\n              </div>\n              <div class=\"mr-3\">\n                <small>24h Change</small>\n                <div :class=\"changesIn24H > 0 ? 'text-success': 'text-danger'\">\n                  {{ changesIn24H }}%\n                </div>\n              </div>\n              <div class=\"mr-3\">\n                <small>24h High</small>\n                <div>{{ high24 }}</div>\n              </div>\n              <div>\n                <small>24h Low</small>\n                <div>{{ low24 }}</div>\n              </div>\n            </b-col>\n          </b-row>\n          <summary-price-chart\n            v-if=\"!loading\"\n            :chart-data=\"marketChartData\"\n            :min-height=\"150\"\n          />\n          <div\n            v-else\n            class=\"d-flex justify-content-center mt-3\"\n          >\n            <b-spinner label=\"Loading...\" /> {{ error }}\n          </div>\n        </b-card>\n      </b-col>\n      <b-col\n        md=\"4\"\n        sm=\"12\"\n      >\n        <b-card>\n          <Place\n            :pool.sync=\"current\"\n            :denom-trace=\"denomTrace\"\n          />\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport {\n  BRow, BCol, BCard, BButton, BPopover, BTable, BSpinner,\n} from 'bootstrap-vue'\nimport { CoinGeckoMap, getPairName } from '@/libs/osmos'\nimport { formatTokenDenom } from '@/libs/utils'\nimport FeatherIcon from '@/@core/components/feather-icon/FeatherIcon.vue'\nimport Place from './components/KlineTrade/Place.vue'\n// import Kline from './components/kline/index.vue'\nimport SummaryPriceChart from './SummaryPriceChart.vue'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BButton,\n    BPopover,\n    BTable,\n    BSpinner,\n    Place,\n    BCard,\n    SummaryPriceChart,\n    FeatherIcon,\n  },\n  beforeRouteUpdate(to, from, next) {\n    const { poolid } = to.params\n    this.init(poolid)\n    next()\n    // }\n  },\n  data() {\n    return {\n      loading: true,\n      error: '',\n      base: '',\n      target: '',\n      fields: ['pair', 'price', 'change'],\n      show: false,\n      pools: [],\n      current: {},\n      denomTrace: [],\n      klineData: [],\n      marketData: {},\n      high24: 0,\n      low24: 0,\n    }\n  },\n  computed: {\n    pairs() {\n      const pairs = this.pools.map(x => {\n        const pair = x.poolAssets.map(t => {\n          if (t.token.denom.startsWith('ibc/')) {\n            return formatTokenDenom(this.denomTrace[t.token.denom] ? this.denomTrace[t.token.denom].base_denom : ' ')\n          }\n          return formatTokenDenom(t.token.denom)\n        })\n        return {\n          id: x.id,\n          pair,\n          price: this.getPrice(pair),\n          change: this.getChanges(pair),\n        }\n      })\n      return pairs\n    },\n    latestPrice() {\n      return this.getPrice([this.base, this.target])\n    },\n    changesIn24H() {\n      return this.getChanges([this.base, this.target])\n    },\n    marketChartData() {\n      if (this.marketData && this.marketData.prices) {\n        const labels = this.marketData.prices.map(x => x[0])\n        const data = this.marketData.prices.map(x => x[1])\n        return {\n          labels,\n          datasets: [\n            {\n              label: 'Price',\n              data,\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              borderWidth: 1,\n              pointStyle: 'dash',\n              barThickness: 15,\n            },\n          ],\n        }\n      }\n      return { labels: [], datasets: [] }\n    },\n  },\n  created() {\n    const { poolid } = this.$route.params\n    this.$http.osmosis.getDenomTraces().then(x => {\n      this.denomTrace = x\n      this.$http.osmosis.getPools().then(pools => {\n        this.pools = pools\n        this.init(poolid)\n      })\n    })\n  },\n  methods: {\n    getPrice(symbol) {\n      const p1 = this.$store.state.chains.quotes[symbol[0]]\n      const p2 = this.$store.state.chains.quotes[symbol[1]]\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-'\n    },\n    getChanges(symbol) {\n      const p1 = this.$store.state.chains.quotes[symbol[0]]\n      const p2 = this.$store.state.chains.quotes[symbol[1]]\n      return p1 && p2 ? (p1.usd_24h_change / p2.usd_24h_change).toFixed(2) : '-'\n    },\n    init(poolid) {\n      this.high24 = 0\n      this.low24 = 0\n      this.current = this.pools.find(p => p.id === poolid) || this.pools[0]\n      this.base = getPairName(this.current, this.denomTrace, 'base')\n      this.target = getPairName(this.current, this.denomTrace, 'target')\n      this.$http.osmosis.getMarketData(CoinGeckoMap[this.base], CoinGeckoMap[this.target]).then(res => {\n        this.marketData = res\n        this.loading = false\n        const start = Date.now() - 8.64e+7\n        res.prices.forEach(x => {\n          if (x[0] > start) {\n            if (x[1] > this.high24) {\n              // eslint-disable-next-line prefer-destructuring\n              this.high24 = x[1]\n            }\n            if (x[1] < this.low24 || this.low24 === 0) {\n              // eslint-disable-next-line prefer-destructuring\n              this.low24 = x[1]\n            }\n          }\n        })\n      }).catch(e => {\n        this.error = `This feature is not avalable in your country. \\n这个功能尚未对你的国家开放。${e}`\n      })\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}