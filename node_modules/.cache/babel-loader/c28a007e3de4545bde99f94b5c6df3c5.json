{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BProgress, BProgressBar } from 'bootstrap-vue';\nexport default {\n  components: {\n    BProgress: BProgress,\n    BProgressBar: BProgressBar\n  },\n  props: {\n    hash: {\n      type: String,\n      default: null\n    },\n    selectedChain: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      isLoading: true,\n      succeed: false,\n      error: '',\n      checkTimes: 0\n    };\n  },\n  computed: {\n    progresBar: function progresBar() {\n      // success: [100, 0, 0]\n      // fail: [50, 50, 0]\n      // pending: [0, 0, 100]\n      if (!this.hash) {\n        return [0, 0, 100];\n      }\n\n      if (this.succeed) {\n        return [100, 0, 0];\n      }\n\n      return [50, 0, 50];\n    },\n    txUrl: function txUrl() {\n      var chain = this.selectedChain ? this.selectedChain.chain_name : this.$store.state.chains.selected.chain_name;\n      return \"/\".concat(chain, \"/tx/\").concat(this.hash);\n    }\n  },\n  mounted: function mounted() {\n    this.timer = setInterval(this.trace, 6000);\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.timer);\n  },\n  methods: {\n    trace: function trace() {\n      var _this = this;\n\n      if (this.hash) {\n        this.error = null;\n        this.$http.getTxs(this.hash, this.selectedChain).then(function (res) {\n          if (res.code === 0) {\n            _this.succeed = true;\n            _this.isLoading = false;\n            clearInterval(_this.timer);\n            var elem = document.getElementById('txevent');\n\n            if (elem) {\n              var event = new Event('txcompleted', res);\n              elem.dispatchEvent(event);\n            }\n          } else if (res.code !== 3) {\n            // code 3 is tx unconfirmed(not founded).\n            _this.error = res.raw_log;\n            clearInterval(_this.timer);\n          }\n        }, function () {\n          // error statement\n          _this.checkTimes += 1;\n\n          if (_this.checkTimes > 5) {\n            clearInterval(_this.timer);\n            _this.error = 'Timeout';\n          }\n        }).catch(function (e) {\n          _this.error = e;\n          clearInterval(_this.timer);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AAEA;EACAA;IACAC,oBADA;IAEAC;EAFA,CADA;EAKAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CALA;EAeAE,IAfA,kBAeA;IACA;MACAC,eADA;MAEAC,cAFA;MAGAC,SAHA;MAIAC;IAJA;EAMA,CAtBA;EAuBAC;IACAC,UADA,wBACA;MACA;MACA;MACA;MACA;QACA;MACA;;MACA;QACA;MACA;;MACA;IACA,CAZA;IAaAC,KAbA,mBAaA;MACA;MACA;IACA;EAhBA,CAvBA;EAyCAC,OAzCA,qBAyCA;IACA;EACA,CA3CA;EA4CAC,aA5CA,2BA4CA;IACAC;EACA,CA9CA;EA+CAC;IACAC,KADA,mBACA;MAAA;;MACA;QACA;QACA;UACA;YACA;YACA;YACAF;YACA;;YACA;cACA;cACAG;YACA;UACA,CATA,MASA;YAAA;YACA;YACAH;UACA;QACA,CAdA,EAcA;UACA;UACA;;UACA;YACAA;YACA;UACA;QACA,CArBA,EAqBAI,KArBA,CAqBA;UACA;UACAJ;QACA,CAxBA;MAyBA;IACA;EA9BA;AA/CA","names":["components","BProgress","BProgressBar","props","hash","type","default","selectedChain","data","isLoading","succeed","error","checkTimes","computed","progresBar","txUrl","mounted","beforeDestroy","clearInterval","methods","trace","elem","catch"],"sourceRoot":"src/views/components/OperationModal","sources":["TransactionResult.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      v-if=\"false\"\n      class=\"board \"\n    >\n      <div class=\"data\">\n        <div class=\"board-row\">\n          <div class=\"key\">\n            AMOUNT\n          </div>\n          <div class=\"value\">\n            1,233,000 USDT\n          </div>\n        </div>\n        <div class=\"board-row\">\n          <div class=\"key\">\n            BRIDGE FEE\n          </div>\n          <div class=\"value\">\n            3,000 USDT\n          </div>\n        </div>\n      </div>\n      <div class=\"sum\">\n        <div class=\"key\">\n          TRANSFER AMOUNT\n        </div>\n        <div class=\"value\">\n          1,213,000 USDT\n        </div>\n      </div>\n    </div>\n\n    <p\n      v-if=\"succeed\"\n      class=\"result-text mt-1 text-success\"\n    >\n      Congratulations! Transfer completed successfully.\n    </p>\n    <p\n      v-else-if=\"error\"\n      class=\"result-text mt-1 text-danger\"\n    >\n      {{ error }}\n    </p>\n    <p\n      v-else\n      class=\"result-text mt-1 text-primary\"\n    >\n      Processing...\n    </p>\n\n    <div class=\"status\">\n      <b-progress :animated=\"isLoading\">\n        <b-progress-bar\n          variant=\"success\"\n          :value=\"progresBar[0]\"\n        />\n        <b-progress-bar\n          variant=\"danger\"\n          :value=\"progresBar[1]\"\n        />\n      </b-progress>\n      <div class=\"status-text\">\n        <span v-if=\"hash\">SUBMITED</span>\n        <span v-if=\"succeed\">COMPLETED</span>\n        <span v-if=\"error\">FAILED</span>\n      </div>\n    </div>\n    <div class=\"link\">\n      <router-link\n        :to=\"txUrl\"\n      >\n        View Transaction\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BProgress, BProgressBar } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BProgress,\n    BProgressBar,\n  },\n  props: {\n    hash: {\n      type: String,\n      default: null,\n    },\n    selectedChain: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      isLoading: true,\n      succeed: false,\n      error: '',\n      checkTimes: 0,\n    }\n  },\n  computed: {\n    progresBar() {\n      // success: [100, 0, 0]\n      // fail: [50, 50, 0]\n      // pending: [0, 0, 100]\n      if (!this.hash) {\n        return [0, 0, 100]\n      }\n      if (this.succeed) {\n        return [100, 0, 0]\n      }\n      return [50, 0, 50]\n    },\n    txUrl() {\n      const chain = this.selectedChain ? this.selectedChain.chain_name : this.$store.state.chains.selected.chain_name\n      return `/${chain}/tx/${this.hash}`\n    },\n  },\n  mounted() {\n    this.timer = setInterval(this.trace, 6000)\n  },\n  beforeDestroy() {\n    clearInterval(this.timer)\n  },\n  methods: {\n    trace() {\n      if (this.hash) {\n        this.error = null\n        this.$http.getTxs(this.hash, this.selectedChain).then(res => {\n          if (res.code === 0) {\n            this.succeed = true\n            this.isLoading = false\n            clearInterval(this.timer)\n            const elem = document.getElementById('txevent')\n            if (elem) {\n              const event = new Event('txcompleted', res)\n              elem.dispatchEvent(event)\n            }\n          } else if (res.code !== 3) { // code 3 is tx unconfirmed(not founded).\n            this.error = res.raw_log\n            clearInterval(this.timer)\n          }\n        }, () => {\n          // error statement\n          this.checkTimes += 1\n          if (this.checkTimes > 5) {\n            clearInterval(this.timer)\n            this.error = 'Timeout'\n          }\n        }).catch(e => {\n          this.error = e\n          clearInterval(this.timer)\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.board {\n  background: #f8f8f8;\n  border-radius: 8px;\n  padding: 0 12px;\n  margin: 35px 0;\n  .data {\n    padding: 10px 0;\n    border-bottom: 1px solid #607d8b;\n  }\n  .board-row {\n    display: flex;\n    justify-content: space-between;\n    font-size: 16px;\n    line-height: 34px;\n    .key {\n      color: #666;\n    }\n    .value {\n      font-weight: bold;\n    }\n  }\n  .sum {\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n    font-weight: bold;\n    padding: 15px 0;\n  }\n}\n.result-text {\n  text-align: center;\n  font-size: 16px;\n}\n.status {\n  margin-top: 30px;\n  .status-text {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 20px;\n    font-weight: 500;\n  }\n}\n.link {\n  margin-top: 20px;\n  text-align: center;\n  a {\n    text-decoration: underline;\n    color: var(--purple)\n  }\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}