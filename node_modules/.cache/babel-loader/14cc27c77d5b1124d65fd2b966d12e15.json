{"ast":null,"code":"import _asyncToGenerator from \"/root/cosmos-based-explorer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport { ValidationProvider, ValidationObserver } from 'vee-validate';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'; // import 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css';\nimport { BAlert, BRow, BCol, BFormGroup, BFormInput, BFormRadio, BFormCheckbox, BAvatar, BInputGroup, BInputGroupPrepend, BFormRadioGroup, VBTooltip, BFormTextarea, BButton } from 'bootstrap-vue';\nimport { required } from '@validations';\nimport { addressDecode, addressEnCode, getLedgerAddress, getLocalAccounts } from '@/libs/utils';\nimport { toHex } from '@cosmjs/encoding';\nexport default {\n  components: {\n    BAlert: BAlert,\n    BButton: BButton,\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver,\n    FormWizard: FormWizard,\n    TabContent: TabContent,\n    BAvatar: BAvatar,\n    BRow: BRow,\n    BCol: BCol,\n    BFormGroup: BFormGroup,\n    BFormInput: BFormInput,\n    BFormRadio: BFormRadio,\n    BFormCheckbox: BFormCheckbox,\n    BFormTextarea: BFormTextarea,\n    BInputGroup: BInputGroup,\n    BInputGroupPrepend: BInputGroupPrepend,\n    BFormRadioGroup: BFormRadioGroup,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent: ToastificationContent\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      debug: '',\n      device: 'keplr',\n      address: '',\n      hdpath: \"m/44'/118/0'/0/0\",\n      name: '',\n      options: {},\n      required: required,\n      selected: [],\n      accounts: null,\n      exludes: [],\n      // HD Path is NOT supported,\n      edit: false,\n      keplr: '',\n      chainId: '',\n      error: null\n    };\n  },\n  computed: {\n    chains: function chains() {\n      var config = JSON.parse(localStorage.getItem('chains'));\n      this.exludes.forEach(function (x) {\n        delete config[x];\n      });\n      return config;\n    },\n    addresses: function addresses() {\n      var _this = this;\n\n      if (this.accounts && this.accounts.address) {\n        var _addressDecode = addressDecode(this.accounts.address),\n            data = _addressDecode.data;\n\n        return this.selected.map(function (x) {\n          if (_this.chains[x]) {\n            var _this$chains$x = _this.chains[x],\n                logo = _this$chains$x.logo,\n                addr_prefix = _this$chains$x.addr_prefix,\n                coin_type = _this$chains$x.coin_type;\n            var addr = addressEnCode(addr_prefix, data, coin_type);\n            return {\n              chain: x,\n              addr: addr,\n              logo: logo,\n              hdpath: _this.hdpath\n            };\n          }\n\n          return null;\n        }).filter(function (x) {\n          return x != null;\n        });\n      }\n\n      return [];\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var selected = this.$store.state.chains.selected; // this.chain = selected\n\n    this.$http.getLatestBlock().then(function (res) {\n      _this2.chainId = res.block.header.chain_id;\n      _this2.keplr = _this2.initParamsForKeplr(_this2.chainId, selected);\n    });\n\n    if (selected && selected.chain_name && !this.exludes.includes(selected.chain_name)) {\n      this.selected.push(selected.chain_name);\n    }\n\n    var name = new URLSearchParams(window.location.search).get('name');\n    var wallets = getLocalAccounts();\n\n    if (name && wallets && wallets[name]) {\n      var wallet = wallets[name];\n      this.device = wallet.device;\n      this.name = wallet.name;\n      this.edit = true;\n\n      if (wallet.address) {\n        wallet.address.forEach(function (a) {\n          if (!_this2.selected.includes(a.chain)) {\n            _this2.selected.push(a.chain);\n          }\n        });\n        this.address = wallet.address[0].addr;\n        this.hdpath = wallet.address[0].hdpath;\n\n        if (this.localAddress()) {\n          this.$refs.wizard.nextTab();\n        }\n      }\n    } else {\n      this.hdpath = \"m/44'/\".concat(selected.coin_type, \"/0'/0/0\");\n    }\n  },\n  methods: {\n    suggest: function suggest() {\n      var _this3 = this;\n\n      if (window.keplr) {\n        window.keplr.experimentalSuggestChain(JSON.parse(this.keplr)).catch(function (e) {\n          _this3.error = e;\n        });\n      }\n    },\n    initParamsForKeplr: function initParamsForKeplr(chainid, chain) {\n      return JSON.stringify({\n        chainId: chainid,\n        chainName: chain.chain_name,\n        rpc: Array.isArray(chain.rpc) ? chain.rpc[0] : chain.rpc,\n        rest: Array.isArray(chain.api) ? chain.api[0] : chain.api,\n        bip44: {\n          coinType: chain.coin_type\n        },\n        coinType: chain.coin_type,\n        bech32Config: {\n          bech32PrefixAccAddr: chain.addr_prefix,\n          bech32PrefixAccPub: \"\".concat(chain.addr_prefix, \"pub\"),\n          bech32PrefixValAddr: \"\".concat(chain.addr_prefix, \"valoper\"),\n          bech32PrefixValPub: \"\".concat(chain.addr_prefix, \"valoperpub\"),\n          bech32PrefixConsAddr: \"\".concat(chain.addr_prefix, \"valcons\"),\n          bech32PrefixConsPub: \"\".concat(chain.addr_prefix, \"valconspub\")\n        },\n        currencies: [{\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: chain.assets[0].exponent,\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown'\n        }],\n        feeCurrencies: [{\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: chain.assets[0].exponent,\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown'\n        }],\n        stakeCurrency: {\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: chain.assets[0].exponent,\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown'\n        },\n        gasPriceStep: {\n          low: 0.01,\n          average: 0.025,\n          high: 0.03\n        }\n      }, null, '\\t');\n    },\n    formatPubkey: function formatPubkey(v) {\n      if (typeof v === 'string') {\n        return v;\n      }\n\n      if (v) {\n        return toHex(v);\n      }\n\n      return '';\n    },\n    connect: function connect() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var transport;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                transport = _this4.device === 'ledger' ? 'usb' : 'bluetooth';\n                return _context.abrupt(\"return\", getLedgerAddress(transport, _this4.hdpath));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    cennectKeplr: function cennectKeplr() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var chainId, offlineSigner;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!window.getOfflineSigner || !window.keplr)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _this5.debug = 'Please install keplr extension';\n                return _context2.abrupt(\"return\", null);\n\n              case 3:\n                _context2.next = 5;\n                return _this5.$http.getLatestBlock().then(function (ret) {\n                  return ret.block.header.chain_id;\n                });\n\n              case 5:\n                chainId = _context2.sent;\n                _context2.next = 8;\n                return window.keplr.enable(chainId);\n\n              case 8:\n                offlineSigner = window.getOfflineSigner(chainId);\n                return _context2.abrupt(\"return\", offlineSigner.getAccounts());\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    localAddress: function localAddress() {\n      if (!this.address) return false;\n\n      try {\n        var _addressDecode2 = addressDecode(this.address),\n            data = _addressDecode2.data;\n\n        if (data) {\n          this.accounts = {\n            address: this.address,\n            pubkey: data\n          };\n          return true;\n        }\n      } catch (e) {\n        this.debug = e;\n      }\n\n      return false;\n    },\n    formSubmitted: function formSubmitted() {\n      var string = localStorage.getItem('accounts');\n      var accounts = string ? JSON.parse(string) : {};\n      accounts[this.name] = {\n        name: this.name,\n        device: this.device,\n        address: this.addresses\n      };\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n\n      if (!this.$store.state.chains.defaultWallet) {\n        this.$store.commit('setDefaultWallet', this.name);\n      }\n\n      this.$toast({\n        component: ToastificationContent,\n        props: {\n          title: 'Address Saved!',\n          icon: 'EditIcon',\n          variant: 'success'\n        }\n      });\n      this.$router.push('./accounts');\n    },\n    validationFormDevice: function validationFormDevice() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var ok;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ok = String(_this6.name).length > 0;\n\n                if (ok) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                _context3.t0 = _this6.device;\n                _context3.next = _context3.t0 === 'keplr' ? 5 : _context3.t0 === 'ledger' ? 8 : _context3.t0 === 'ledger2' ? 8 : 11;\n                break;\n\n              case 5:\n                _context3.next = 7;\n                return _this6.cennectKeplr().then(function (accounts) {\n                  if (accounts) {\n                    // eslint-disable-next-line prefer-destructuring\n                    _this6.accounts = accounts[0];\n                    ok = true;\n                  }\n                });\n\n              case 7:\n                return _context3.abrupt(\"break\", 12);\n\n              case 8:\n                _context3.next = 10;\n                return _this6.connect().then(function (accounts) {\n                  if (accounts) {\n                    // eslint-disable-next-line prefer-destructuring\n                    _this6.accounts = accounts[0];\n                    ok = true;\n                  }\n                }).catch(function (e) {\n                  _this6.debug = e;\n                });\n\n              case 10:\n                return _context3.abrupt(\"break\", 12);\n\n              case 11:\n                ok = _this6.localAddress();\n\n              case 12:\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this6.$refs.deviceRules.validate().then(function (success) {\n                    if (ok && success) {\n                      resolve(true);\n                    }\n\n                    reject();\n                  });\n                }));\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    validationFormAddress: function validationFormAddress() {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this7.$refs.accountRules.validate().then(function (success) {\n          if (success) {\n            resolve(true);\n          } else {\n            reject();\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["BAlert","BRow","BCol","BFormGroup","BFormInput","BFormRadio","BFormCheckbox","BAvatar","BInputGroup","BInputGroupPrepend","BFormRadioGroup","VBTooltip","BFormTextarea","BButton","addressDecode","addressEnCode","getLedgerAddress","getLocalAccounts","components","ValidationProvider","ValidationObserver","FormWizard","TabContent","ToastificationContent","directives","data","debug","device","address","hdpath","name","options","required","selected","accounts","exludes","edit","keplr","chainId","error","computed","chains","addresses","chain","addr","logo","filter","mounted","wallet","methods","suggest","window","initParamsForKeplr","chainid","chainName","rpc","rest","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","formatPubkey","v","connect","transport","cennectKeplr","offlineSigner","localAddress","pubkey","formSubmitted","localStorage","component","props","title","icon","variant","validationFormDevice","ok","String","catch","resolve","reject","validationFormAddress"],"sourceRoot":"src/views","sources":["WalletAccountImportAddress.vue"],"sourcesContent":["<template>\n  <div>\n    <b-alert\n      variant=\"danger\"\n      :show=\"true\"\n      dismissible\n    >\n      <h4 class=\"alert-heading\">\n        DISCLAIMER:\n      </h4>\n      <div class=\"alert-body\">\n        <span>explorer.owlstake.com is maintained by the community, Everyone could add a chain to explorer.owlstake.com. Some of those blockchains are not fully tested, Use at your own risk.</span>\n      </div>\n    </b-alert>\n    <form-wizard\n      ref=\"wizard\"\n      color=\"#7367F0\"\n      :title=\"null\"\n      :subtitle=\"null\"\n      shape=\"square\"\n      finish-button-text=\"Save\"\n      back-button-text=\"Previous\"\n      class=\"steps-transparent mb-3 md\"\n      @on-complete=\"formSubmitted\"\n    >\n      <!-- Device tab -->\n      <tab-content\n        title=\"Device\"\n        :before-change=\"validationFormDevice\"\n      >\n        <validation-observer\n          ref=\"deviceRules\"\n          tag=\"form\"\n        >\n          <b-row>\n            <b-col md=\"12\">\n              <b-form-group\n                label=\"Select a device to import accounts\"\n                label-for=\"device\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"device\"\n                  rules=\"required\"\n                >\n                  <b-form-radio-group\n                    v-model=\"device\"\n                    stacked\n                  >\n\n                    <b-form-radio\n                      v-model=\"device\"\n                      name=\"device\"\n                      value=\"keplr\"\n                      checked\n                      class=\"mb-1 mt-1\"\n                    >\n                      Keplr\n                    </b-form-radio>\n                    <b-form-radio\n                      v-model=\"device\"\n                      name=\"device\"\n                      value=\"ledger\"\n                      class=\"mb-1\"\n                    >\n                      Ledger via WebUSB\n                    </b-form-radio>\n                    <b-form-radio\n                      v-model=\"device\"\n                      name=\"device\"\n                      value=\"ledger2\"\n                      class=\"mb-1\"\n                    >\n                      Ledger via Bluetooth\n                    </b-form-radio>\n                    <b-form-radio\n                      v-model=\"device\"\n                      name=\"device\"\n                      value=\"address\"\n                    >\n                      Address (Observe Only)\n                    </b-form-radio>\n                  </b-form-radio-group>\n                  <b-form-input\n                    v-if=\"device === 'address'\"\n                    v-model=\"address\"\n                    class=\"mt-1\"\n                    name=\"address\"\n                    placeholder=\"cosmos1ev0vtddkl7jlwfawlk06yzncapw2x9quyxx75u\"\n                  />\n                  <small class=\"text-danger\">{{ debug }}{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col\n              v-if=\"device.startsWith('ledger')\"\n              md=\"12\"\n            >\n              <b-form-group\n                label=\"HD Path\"\n                label-for=\"hdpath\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"HD Path\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    v-model=\"hdpath\"\n                    class=\"mt-1\"\n                    name=\"hdpath\"\n                    placeholder=\"m/44'/118/0'/0/0\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n        </validation-observer>\n      </tab-content>\n\n      <!-- address  -->\n      <tab-content\n        title=\"Accounts\"\n        :before-change=\"validationFormAddress\"\n      >\n        <validation-observer\n          ref=\"accountRules\"\n          tag=\"form\"\n        >\n          <b-row>\n            <b-col md=\"12\">\n              <b-form-group\n                label=\"Account Name\"\n                label-for=\"account_name\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"Account Name\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    id=\"account_name\"\n                    v-model=\"name\"\n                    :state=\"errors.length > 0 ? false:null\"\n                    placeholder=\"Ping Nano X\"\n                    :readonly=\"edit\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col\n              v-if=\"hdpath\"\n              md=\"12\"\n            >\n              <b-form-group\n                label=\"HD Path\"\n                label-for=\"ir\"\n              >\n                <b-form-input\n                  id=\"ir\"\n                  :value=\"hdpath\"\n                  readonly\n                />\n              </b-form-group>\n            </b-col>\n            <b-col\n              v-if=\"accounts\"\n              md=\"12\"\n            >\n              <b-form-group\n                label=\"Public Key\"\n                label-for=\"ir\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"Public Key\"\n                  rules=\"required\"\n                >\n                  <b-form-input\n                    id=\"ir\"\n                    :value=\"formatPubkey(accounts.pubkey)\"\n                    readonly\n                    :state=\"errors.length > 0 ? false:null\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col md=\"12\">\n              <b-form-group\n                label=\"Import Address For Chains:\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"addrs\"\n                  rules=\"required\"\n                >\n                  <div class=\"demo-inline-spacing text-uppercase\">\n                    <b-row>\n                      <b-col\n                        v-for=\"item, key in chains\"\n                        :key=\"key\"\n                        xs=\"12\"\n                        md=\"4\"\n                        lg=\"3\"\n                        class=\"mb-25\"\n                      >\n                        <b-form-checkbox\n                          v-model=\"selected\"\n                          name=\"addrs\"\n                          :value=\"key\"\n                        >\n                          <b-avatar\n                            :src=\"item.logo\"\n                            size=\"18\"\n                            variant=\"light-primary\"\n                            rounded=\"\"\n                          />\n                          <span\n                            v-b-tooltip.hover.v-primary\n                            :title=\"`Coin Type: ${item.coin_type}`\"\n                            :class=\"hdpath.startsWith(`m/44'/${item.coin_type}`)?'text-success':'text-danger'\"\n                          > {{ item.chain_name }}</span>\n                        </b-form-checkbox>\n                      </b-col>\n                    </b-row>\n                  </div>\n                  <small class=\"text-success\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n              <b-alert\n                show\n                variant=\"info\"\n              >\n                <div class=\"alert-heading\">\n                  IMPORTANT\n                </div>\n                <div class=\"alert-body\">\n                  <div>\n                    If you don't have Ledger, Do not import those addresses in <b class=\"text-danger\">RED</b>. Because these addresses are derived from different coin_type which is not as same as the official one\n                  </div>\n                </div>\n              </b-alert>\n            </b-col>\n          </b-row>\n        </validation-observer>\n      </tab-content>\n\n      <tab-content\n        title=\"Confirmation\"\n      >\n        <div class=\"d-flex border-bottom mb-2\">\n          <feather-icon\n            icon=\"UserIcon\"\n            size=\"19\"\n            class=\"mb-50\"\n          />\n          <h4 class=\"mb-0 ml-50\">\n            {{ name }} <small> {{ hdpath }}</small>\n          </h4>\n        </div>\n\n        <b-row class=\"mb-2\">\n          <b-col\n            v-for=\"i in addresses\"\n            :key=\"i.addr\"\n            cols=\"12\"\n          >\n            <b-input-group class=\"mb-25\">\n              <b-input-group-prepend is-text>\n                <b-avatar\n                  :src=\"i.logo\"\n                  size=\"18\"\n                  variant=\"light-primary\"\n                  rounded\n                />\n              </b-input-group-prepend>\n              <b-form-input :value=\"i.addr\" />\n            </b-input-group>\n          </b-col>\n        </b-row>\n      </tab-content>\n    </form-wizard>\n\n    <b-alert\n      variant=\"secondary\"\n      :show=\"!accounts && device === 'keplr'\"\n    >\n      <h4 class=\"alert-heading\">\n        Enable Keplr For {{ chainId }}\n      </h4>\n      <div class=\"alert-body p-1\">\n        <span>If Keplr has not added <code>{{ chainId }}</code>, We can enable it here.</span>\n        <b-form-textarea\n          :value=\"keplr\"\n          rows=\"10\"\n          class=\"mt-1 mb-1\"\n        />\n        <div\n          v-if=\"error\"\n          class=\"text-danger\"\n        >\n          {{ error }}\n        </div>\n        <b-button\n          variant=\"primary\"\n          @click=\"suggest()\"\n        >\n          Enable Keplr\n        </b-button>\n      </div>\n    </b-alert>\n  </div>\n</template>\n\n<script>\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n// import 'vue-form-wizard/dist/vue-form-wizard.min.css'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nimport {\n  BAlert,\n  BRow,\n  BCol,\n  BFormGroup,\n  BFormInput,\n  BFormRadio,\n  BFormCheckbox,\n  BAvatar,\n  BInputGroup,\n  BInputGroupPrepend,\n  BFormRadioGroup,\n  VBTooltip,\n  BFormTextarea,\n  BButton,\n} from 'bootstrap-vue'\nimport { required } from '@validations'\nimport {\n  addressDecode, addressEnCode, getLedgerAddress, getLocalAccounts,\n} from '@/libs/utils'\nimport { toHex } from '@cosmjs/encoding'\n\nexport default {\n  components: {\n    BAlert,\n    BButton,\n    ValidationProvider,\n    ValidationObserver,\n    FormWizard,\n    TabContent,\n    BAvatar,\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormInput,\n    BFormRadio,\n    BFormCheckbox,\n    BFormTextarea,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormRadioGroup,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n  },\n  data() {\n    return {\n      debug: '',\n      device: 'keplr',\n      address: '',\n      hdpath: \"m/44'/118/0'/0/0\",\n      name: '',\n      options: {},\n      required,\n      selected: [],\n      accounts: null,\n      exludes: [], // HD Path is NOT supported,\n      edit: false,\n      keplr: '',\n      chainId: '',\n      error: null,\n    }\n  },\n  computed: {\n    chains() {\n      const config = JSON.parse(localStorage.getItem('chains'))\n\n      this.exludes.forEach(x => {\n        delete config[x]\n      })\n      return config\n    },\n    addresses() {\n      if (this.accounts && this.accounts.address) {\n        const { data } = addressDecode(this.accounts.address)\n        return this.selected.map(x => {\n          if (this.chains[x]) {\n            const { logo, addr_prefix, coin_type } = this.chains[x]\n            const addr = addressEnCode(addr_prefix, data, coin_type)\n            return {\n              chain: x, addr, logo, hdpath: this.hdpath,\n            }\n          }\n          return null\n        }).filter(x => x != null)\n      }\n      return []\n    },\n  },\n  mounted() {\n    const { selected } = this.$store.state.chains\n    // this.chain = selected\n    this.$http.getLatestBlock().then(res => {\n      this.chainId = res.block.header.chain_id\n      this.keplr = this.initParamsForKeplr(this.chainId, selected)\n    })\n    if (selected && selected.chain_name && !this.exludes.includes(selected.chain_name)) {\n      this.selected.push(selected.chain_name)\n    }\n    const name = new URLSearchParams(window.location.search).get('name')\n    const wallets = getLocalAccounts()\n    if (name && wallets && wallets[name]) {\n      const wallet = wallets[name]\n      this.device = wallet.device\n      this.name = wallet.name\n      this.edit = true\n      if (wallet.address) {\n        wallet.address.forEach(a => {\n          if (!this.selected.includes(a.chain)) {\n            this.selected.push(a.chain)\n          }\n        })\n        this.address = wallet.address[0].addr\n        this.hdpath = wallet.address[0].hdpath\n        if (this.localAddress()) {\n          this.$refs.wizard.nextTab()\n        }\n      }\n    } else {\n      this.hdpath = `m/44'/${selected.coin_type}/0'/0/0`\n    }\n  },\n  methods: {\n    suggest() {\n      if (window.keplr) {\n        window.keplr.experimentalSuggestChain(JSON.parse(this.keplr)).catch(e => {\n          this.error = e\n        })\n      }\n    },\n    initParamsForKeplr(chainid, chain) {\n      return JSON.stringify({\n        chainId: chainid,\n        chainName: chain.chain_name,\n        rpc: Array.isArray(chain.rpc) ? chain.rpc[0] : chain.rpc,\n        rest: Array.isArray(chain.api) ? chain.api[0] : chain.api,\n        bip44: {\n          coinType: chain.coin_type,\n        },\n        coinType: chain.coin_type,\n        bech32Config: {\n          bech32PrefixAccAddr: chain.addr_prefix,\n          bech32PrefixAccPub: `${chain.addr_prefix}pub`,\n          bech32PrefixValAddr: `${chain.addr_prefix}valoper`,\n          bech32PrefixValPub: `${chain.addr_prefix}valoperpub`,\n          bech32PrefixConsAddr: `${chain.addr_prefix}valcons`,\n          bech32PrefixConsPub: `${chain.addr_prefix}valconspub`,\n        },\n        currencies: [\n          {\n            coinDenom: chain.assets[0].symbol,\n            coinMinimalDenom: chain.assets[0].base,\n            coinDecimals: chain.assets[0].exponent,\n            coinGeckoId: chain.assets[0].coingecko_id || 'unknown',\n          },\n        ],\n        feeCurrencies: [\n          {\n            coinDenom: chain.assets[0].symbol,\n            coinMinimalDenom: chain.assets[0].base,\n            coinDecimals: chain.assets[0].exponent,\n            coinGeckoId: chain.assets[0].coingecko_id || 'unknown',\n          },\n        ],\n        stakeCurrency: {\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: chain.assets[0].exponent,\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown',\n        },\n        gasPriceStep: {\n          low: 0.01,\n          average: 0.025,\n          high: 0.03,\n        },\n      }, null, '\\t')\n    },\n    formatPubkey(v) {\n      if (typeof (v) === 'string') {\n        return v\n      }\n      if (v) {\n        return toHex(v)\n      }\n      return ''\n    },\n    async connect() {\n      const transport = this.device === 'ledger' ? 'usb' : 'bluetooth'\n      return getLedgerAddress(transport, this.hdpath)\n    },\n    async cennectKeplr() {\n      if (!window.getOfflineSigner || !window.keplr) {\n        this.debug = 'Please install keplr extension'\n        return null\n      }\n      // const chainId = 'cosmoshub'\n      const chainId = await this.$http.getLatestBlock().then(ret => ret.block.header.chain_id)\n      await window.keplr.enable(chainId)\n      const offlineSigner = window.getOfflineSigner(chainId)\n      return offlineSigner.getAccounts()\n    },\n    localAddress() {\n      if (!this.address) return false\n      try {\n        const { data } = addressDecode(this.address)\n        if (data) {\n          this.accounts = {\n            address: this.address,\n            pubkey: data,\n          }\n          return true\n        }\n      } catch (e) { this.debug = e }\n      return false\n    },\n    formSubmitted() {\n      const string = localStorage.getItem('accounts')\n      const accounts = string ? JSON.parse(string) : {}\n\n      accounts[this.name] = {\n        name: this.name,\n        device: this.device,\n        address: this.addresses,\n      }\n      localStorage.setItem('accounts', JSON.stringify(accounts))\n      if (!this.$store.state.chains.defaultWallet) {\n        this.$store.commit('setDefaultWallet', this.name)\n      }\n\n      this.$toast({\n        component: ToastificationContent,\n        props: {\n          title: 'Address Saved!',\n          icon: 'EditIcon',\n          variant: 'success',\n        },\n      })\n\n      this.$router.push('./accounts')\n    },\n    async validationFormDevice() {\n      let ok = String(this.name).length > 0\n\n      if (!ok) { // new import, otherwise it's edit mode.\n        switch (this.device) {\n          case 'keplr':\n            await this.cennectKeplr().then(accounts => {\n              if (accounts) {\n              // eslint-disable-next-line prefer-destructuring\n                this.accounts = accounts[0]\n                ok = true\n              }\n            })\n            break\n          case 'ledger':\n          case 'ledger2':\n            await this.connect().then(accounts => {\n              if (accounts) {\n              // eslint-disable-next-line prefer-destructuring\n                this.accounts = accounts[0]\n                ok = true\n              }\n            }).catch(e => {\n              this.debug = e\n            })\n            break\n          default:\n            ok = this.localAddress()\n        }\n      }\n\n      return new Promise((resolve, reject) => {\n        this.$refs.deviceRules.validate().then(success => {\n          if (ok && success) {\n            resolve(true)\n          }\n          reject()\n        })\n      })\n    },\n    validationFormAddress() {\n      return new Promise((resolve, reject) => {\n        this.$refs.accountRules.validate().then(success => {\n          if (success) {\n            resolve(true)\n          } else {\n            reject()\n          }\n        })\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n  // @import '@core/assets/fonts/feather/iconfont.css';\n  @import '@core/scss/vue/libs/vue-wizard.scss';\n</style>\n"]},"metadata":{},"sourceType":"module"}