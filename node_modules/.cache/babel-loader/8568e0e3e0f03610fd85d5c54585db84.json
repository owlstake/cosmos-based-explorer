{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { sha256 } from '@cosmjs/crypto';\nimport { toHex } from '@cosmjs/encoding';\nimport { BTable, BCardTitle, BCard } from 'bootstrap-vue';\nimport { formatTokenAmount, formatTokenDenom } from '@/libs/utils';\nexport default {\n  components: {\n    BCard: BCard,\n    BTable: BTable,\n    BCardTitle: BCardTitle\n  },\n  data: function data() {\n    return {\n      islive: true,\n      assets: [],\n      denoms: {},\n      cfield: [{\n        key: 'denom',\n        formatter: this.formatDenom,\n        tdClass: 'text-nowrap text-truncate overflow-hidden'\n      }, {\n        key: 'abbr',\n        label: 'Amount'\n      }]\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.getAllIBCDenoms().then(function (x) {\n      x.denom_traces.forEach(function (trace) {\n        var hash = toHex(sha256(new TextEncoder().encode(\"\".concat(trace.path, \"/\").concat(trace.base_denom))));\n\n        _this.$set(_this.denoms, \"ibc/\".concat(hash.toUpperCase()), trace);\n      });\n    });\n    this.$http.getBankTotals().then(function (res) {\n      var toshow = res.sort();\n      _this.assets = toshow.reverse().map(function (x) {\n        var xh = x;\n        xh.abbr = formatTokenAmount(x.amount, 0, x.denom);\n        return xh;\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.islive = false;\n  },\n  methods: {\n    formatDenom: function formatDenom(v) {\n      if (this.denoms[v]) {\n        var trace = this.denoms[v];\n        return \"* \".concat(formatTokenDenom(trace.base_denom), \" (\").concat(trace.path, \")\");\n      }\n\n      return formatTokenDenom(v);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}