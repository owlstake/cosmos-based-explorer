{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ValidationProvider } from 'vee-validate';\nimport { BRow, BCol, BFormGroup, BFormInput, BFormRadio } from 'bootstrap-vue';\nimport { required, email, url, between, alpha, integer, password, min, digits, alphaDash, length } from '@validations';\nimport { formatToken } from '@/libs/utils';\nexport default {\n  name: 'VoteDialogue',\n  components: {\n    BRow: BRow,\n    BCol: BCol,\n    BFormGroup: BFormGroup,\n    BFormRadio: BFormRadio,\n    ValidationProvider: ValidationProvider,\n    BFormInput: BFormInput\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true\n    },\n    proposalTitle: {\n      type: String,\n      required: true\n    },\n    address: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      option: null,\n      required: required,\n      password: password,\n      email: email,\n      min: min,\n      integer: integer,\n      url: url,\n      alpha: alpha,\n      between: between,\n      digits: digits,\n      length: length,\n      alphaDash: alphaDash\n    };\n  },\n  computed: {\n    msg: function msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgVote',\n        value: {\n          voter: this.address,\n          proposalId: this.proposalId,\n          option: Number(this.option)\n        }\n      }];\n    }\n  },\n  mounted: function mounted() {\n    this.$emit('update', {\n      modalTitle: 'Vote',\n      historyName: 'vote'\n    });\n  },\n  methods: {\n    format: function format(v) {\n      return formatToken(v);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA,SACAA,IADA,EACAC,IADA,EACAC,UADA,EACAC,UADA,EAEAC,UAFA,QAGA,eAHA;AAIA,SACAC,QADA,EACAC,KADA,EACAC,GADA,EACAC,OADA,EACAC,KADA,EACAC,OADA,EACAC,QADA,EACAC,GADA,EACAC,MADA,EACAC,SADA,EACAC,MADA,QAEA,cAFA;AAGA,SACAC,WADA,QAEA,cAFA;AAIA;EACAC,oBADA;EAEAC;IACAlB,UADA;IAEAC,UAFA;IAGAC,sBAHA;IAIAE,sBAJA;IAKAe,sCALA;IAMAhB;EANA,CAFA;EAUAiB;IACAC;MACAC,YADA;MAEAjB;IAFA,CADA;IAKAkB;MACAD,YADA;MAEAjB;IAFA,CALA;IASAmB;MACAF,YADA;MAEAG;IAFA;EATA,CAVA;EAwBAC,IAxBA,kBAwBA;IACA;MACAC,YADA;MAGAtB,kBAHA;MAIAM,kBAJA;MAKAL,YALA;MAMAM,QANA;MAOAF,gBAPA;MAQAH,QARA;MASAE,YATA;MAUAD,gBAVA;MAWAK,cAXA;MAYAE,cAZA;MAaAD;IAbA;EAeA,CAxCA;EAyCAc;IACAC,GADA,iBACA;MACA;QACAC,sCADA;QAEAC;UACAC,mBADA;UAEAX,2BAFA;UAGAM;QAHA;MAFA;IAQA;EAVA,CAzCA;EAqDAM,OArDA,qBAqDA;IACA;MACAC,kBADA;MAEAC;IAFA;EAIA,CA1DA;EA2DAC;IAEAC,MAFA,kBAEAC,CAFA,EAEA;MACA;IACA;EAJA;AA3DA","names":["BRow","BCol","BFormGroup","BFormInput","BFormRadio","required","email","url","between","alpha","integer","password","min","digits","alphaDash","length","formatToken","name","components","ValidationProvider","props","proposalId","type","proposalTitle","address","default","data","option","computed","msg","typeUrl","value","voter","mounted","modalTitle","historyName","methods","format","v"],"sourceRoot":"src/views/components/OperationModal/components","sources":["Vote.vue"],"sourcesContent":["<template>\n  <div>\n    <b-row>\n      <b-col>\n        <h4>{{ proposalId }}. {{ proposalTitle }}</h4>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-form-group\n          label=\"Voter\"\n          label-for=\"Account\"\n        >\n          <validation-provider\n            #default=\"{ errors }\"\n            rules=\"required\"\n            name=\"Voter\"\n          >\n            <b-form-input\n              v-model=\"address\"\n              readonly\n            />\n            <small class=\"text-danger\">{{ errors[0] }}</small>\n          </validation-provider>\n        </b-form-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <b-form-group\n          label=\"Option\"\n          label-for=\"option\"\n        >\n          <validation-provider\n            #default=\"{ errors }\"\n            rules=\"required\"\n            name=\"option\"\n          >\n            <div class=\"demo-inline-spacing\">\n\n              <b-form-radio\n                v-model=\"option\"\n                name=\"option\"\n                value=\"1\"\n                class=\"custom-control-success\"\n              >\n                Yes\n              </b-form-radio>\n              <b-form-radio\n                v-model=\"option\"\n                name=\"option\"\n                value=\"3\"\n                class=\"custom-control-warning\"\n              >\n                No\n              </b-form-radio>\n              <b-form-radio\n                v-model=\"option\"\n                name=\"option\"\n                value=\"4\"\n                class=\"custom-control-danger\"\n              >\n                No With Veto\n              </b-form-radio>\n              <b-form-radio\n                v-model=\"option\"\n                name=\"option\"\n                value=\"2\"\n                class=\"custom-control-secondary\"\n              >\n                Abstain\n              </b-form-radio>\n            </div>\n            <small class=\"text-danger\">{{ errors[0] }}</small>\n          </validation-provider>\n        </b-form-group>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport { ValidationProvider } from 'vee-validate'\nimport {\n  BRow, BCol, BFormGroup, BFormInput,\n  BFormRadio,\n} from 'bootstrap-vue'\nimport {\n  required, email, url, between, alpha, integer, password, min, digits, alphaDash, length,\n} from '@validations'\nimport {\n  formatToken,\n} from '@/libs/utils'\n\nexport default {\n  name: 'VoteDialogue',\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormRadio,\n    ValidationProvider,\n    BFormInput,\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true,\n    },\n    proposalTitle: {\n      type: String,\n      required: true,\n    },\n    address: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      option: null,\n\n      required,\n      password,\n      email,\n      min,\n      integer,\n      url,\n      alpha,\n      between,\n      digits,\n      length,\n      alphaDash,\n    }\n  },\n  computed: {\n    msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgVote',\n        value: {\n          voter: this.address,\n          proposalId: this.proposalId,\n          option: Number(this.option),\n        },\n      }]\n    },\n  },\n  mounted() {\n    this.$emit('update', {\n      modalTitle: 'Vote',\n      historyName: 'vote',\n    })\n  },\n  methods: {\n\n    format(v) {\n      return formatToken(v)\n    },\n\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n</style>\n"]},"metadata":{},"sourceType":"module"}