{"ast":null,"code":"import { computed, watch } from '@vue/composition-api';\nimport store from '@/store';\nexport default function usAppConfig() {\n  // ------------------------------------------------\n  // isVerticalMenuCollapsed\n  // ------------------------------------------------\n  var isVerticalMenuCollapsed = computed({\n    get: function get() {\n      return store.state.verticalMenu.isVerticalMenuCollapsed;\n    },\n    set: function set(val) {\n      store.commit('verticalMenu/UPDATE_VERTICAL_MENU_COLLAPSED', val);\n    }\n  }); // ------------------------------------------------\n  // RTL\n  // ------------------------------------------------\n\n  var isRTL = computed({\n    get: function get() {\n      return store.state.appConfig.layout.isRTL;\n    },\n    set: function set(val) {\n      store.commit('appConfig/TOGGLE_RTL', val);\n    }\n  }); // ------------------------------------------------\n  // Skin\n  // ------------------------------------------------\n\n  var skin = computed({\n    get: function get() {\n      return store.state.appConfig.layout.skin;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_SKIN', val);\n    }\n  });\n  var skinClasses = computed(function () {\n    if (skin.value === 'bordered') return 'bordered-layout';\n    if (skin.value === 'semi-dark') return 'semi-dark-layout'; // Do not return any class for dark layout because dark layout updates class in body\n    // Do not return any class for light layout as that is default layout\n\n    return null;\n  }); // ------------------------------------------------\n  // routerTransition\n  // ------------------------------------------------\n\n  var routerTransition = computed({\n    get: function get() {\n      return store.state.appConfig.layout.routerTransition;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_ROUTER_TRANSITION', val);\n    }\n  }); // *===============================================---*\n  // *--------- LAYOUT ---------------------------------------*\n  // *===============================================---*\n  // ------------------------------------------------\n  // layoutType\n  // ------------------------------------------------\n\n  var layoutType = computed({\n    get: function get() {\n      return store.state.appConfig.layout.type;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_LAYOUT_TYPE', val);\n    }\n  }); // Reset skin if skin is semi-dark and move to horizontal layout\n\n  watch(layoutType, function (val) {\n    if (val === 'horizontal' && skin.value === 'semi-dark') skin.value = 'light';\n  }); // ------------------------------------------------\n  // Content Width (Full/Boxed)\n  // ------------------------------------------------\n\n  var contentWidth = computed({\n    get: function get() {\n      return store.state.appConfig.layout.contentWidth;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_CONTENT_WIDTH', val);\n    }\n  }); // ------------------------------------------------\n  // isNavMenuHidden\n  // ------------------------------------------------\n\n  var isNavMenuHidden = computed({\n    get: function get() {\n      return store.state.appConfig.layout.menu.hidden;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_NAV_MENU_HIDDEN', val);\n    }\n  }); // *===============================================---*\n  // *--------- NAVBAR ---------------------------------------*\n  // *===============================================---*\n\n  var navbarBackgroundColor = computed({\n    get: function get() {\n      return store.state.appConfig.layout.navbar.backgroundColor;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', {\n        backgroundColor: val\n      });\n    }\n  });\n  var navbarType = computed({\n    get: function get() {\n      return store.state.appConfig.layout.navbar.type;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', {\n        type: val\n      });\n    }\n  }); // *===============================================---*\n  // *--------- FOOTER ---------------------------------------*\n  // *===============================================---*\n\n  var footerType = computed({\n    get: function get() {\n      return store.state.appConfig.layout.footer.type;\n    },\n    set: function set(val) {\n      store.commit('appConfig/UPDATE_FOOTER_CONFIG', {\n        type: val\n      });\n    }\n  });\n  return {\n    isVerticalMenuCollapsed: isVerticalMenuCollapsed,\n    isRTL: isRTL,\n    skin: skin,\n    skinClasses: skinClasses,\n    routerTransition: routerTransition,\n    // Navbar\n    navbarBackgroundColor: navbarBackgroundColor,\n    navbarType: navbarType,\n    // Footer\n    footerType: footerType,\n    // Layout\n    layoutType: layoutType,\n    contentWidth: contentWidth,\n    isNavMenuHidden: isNavMenuHidden\n  };\n}","map":{"version":3,"names":["computed","watch","store","usAppConfig","isVerticalMenuCollapsed","get","state","verticalMenu","set","val","commit","isRTL","appConfig","layout","skin","skinClasses","value","routerTransition","layoutType","type","contentWidth","isNavMenuHidden","menu","hidden","navbarBackgroundColor","navbar","backgroundColor","navbarType","footerType","footer"],"sources":["/root/cosmos-based-explorer/src/@core/app-config/useAppConfig.js"],"sourcesContent":["import { computed, watch } from '@vue/composition-api'\nimport store from '@/store'\n\nexport default function usAppConfig() {\n  // ------------------------------------------------\n  // isVerticalMenuCollapsed\n  // ------------------------------------------------\n  const isVerticalMenuCollapsed = computed({\n    get: () => store.state.verticalMenu.isVerticalMenuCollapsed,\n    set: val => {\n      store.commit('verticalMenu/UPDATE_VERTICAL_MENU_COLLAPSED', val)\n    },\n  })\n\n  // ------------------------------------------------\n  // RTL\n  // ------------------------------------------------\n  const isRTL = computed({\n    get: () => store.state.appConfig.layout.isRTL,\n    set: val => {\n      store.commit('appConfig/TOGGLE_RTL', val)\n    },\n  })\n\n  // ------------------------------------------------\n  // Skin\n  // ------------------------------------------------\n  const skin = computed({\n    get: () => store.state.appConfig.layout.skin,\n    set: val => {\n      store.commit('appConfig/UPDATE_SKIN', val)\n    },\n  })\n\n  const skinClasses = computed(() => {\n    if (skin.value === 'bordered') return 'bordered-layout'\n    if (skin.value === 'semi-dark') return 'semi-dark-layout'\n\n    // Do not return any class for dark layout because dark layout updates class in body\n    // Do not return any class for light layout as that is default layout\n    return null\n  })\n\n  // ------------------------------------------------\n  // routerTransition\n  // ------------------------------------------------\n  const routerTransition = computed({\n    get: () => store.state.appConfig.layout.routerTransition,\n    set: val => {\n      store.commit('appConfig/UPDATE_ROUTER_TRANSITION', val)\n    },\n  })\n\n  // *===============================================---*\n  // *--------- LAYOUT ---------------------------------------*\n  // *===============================================---*\n\n  // ------------------------------------------------\n  // layoutType\n  // ------------------------------------------------\n\n  const layoutType = computed({\n    get: () => store.state.appConfig.layout.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_LAYOUT_TYPE', val)\n    },\n  })\n\n  // Reset skin if skin is semi-dark and move to horizontal layout\n  watch(layoutType, val => {\n    if (val === 'horizontal' && skin.value === 'semi-dark') skin.value = 'light'\n  })\n\n  // ------------------------------------------------\n  // Content Width (Full/Boxed)\n  // ------------------------------------------------\n  const contentWidth = computed({\n    get: () => store.state.appConfig.layout.contentWidth,\n    set: val => {\n      store.commit('appConfig/UPDATE_CONTENT_WIDTH', val)\n    },\n  })\n\n  // ------------------------------------------------\n  // isNavMenuHidden\n  // ------------------------------------------------\n  const isNavMenuHidden = computed({\n    get: () => store.state.appConfig.layout.menu.hidden,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAV_MENU_HIDDEN', val)\n    },\n  })\n\n  // *===============================================---*\n  // *--------- NAVBAR ---------------------------------------*\n  // *===============================================---*\n\n  const navbarBackgroundColor = computed({\n    get: () => store.state.appConfig.layout.navbar.backgroundColor,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', { backgroundColor: val })\n    },\n  })\n\n  const navbarType = computed({\n    get: () => store.state.appConfig.layout.navbar.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', { type: val })\n    },\n  })\n\n  // *===============================================---*\n  // *--------- FOOTER ---------------------------------------*\n  // *===============================================---*\n\n  const footerType = computed({\n    get: () => store.state.appConfig.layout.footer.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_FOOTER_CONFIG', { type: val })\n    },\n  })\n\n  return {\n    isVerticalMenuCollapsed,\n    isRTL,\n    skin,\n    skinClasses,\n    routerTransition,\n\n    // Navbar\n    navbarBackgroundColor,\n    navbarType,\n\n    // Footer\n    footerType,\n\n    // Layout\n    layoutType,\n    contentWidth,\n    isNavMenuHidden,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}