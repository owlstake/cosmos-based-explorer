{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardHeader, BCardBody, BCollapse } from 'bootstrap-vue';\nimport { v4 as uuidv4 } from 'uuid';\nexport default {\n  components: {\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BCollapse: BCollapse\n  },\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      collapseItemID: '',\n      openOnHover: this.$parent.hover\n    };\n  },\n  computed: {\n    accordion: function accordion() {\n      return this.$parent.accordion ? \"accordion-\".concat(this.$parent.collapseID) : null;\n    }\n  },\n  created: function created() {\n    this.collapseItemID = uuidv4();\n    this.visible = this.isVisible;\n  },\n  methods: {\n    updateVisible: function updateVisible() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.visible = val;\n      this.$emit('visible', val);\n    },\n    collapseOpen: function collapseOpen() {\n      if (this.openOnHover) this.updateVisible(true);\n    },\n    collapseClose: function collapseClose() {\n      if (this.openOnHover) this.updateVisible(false);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SACAA,KADA,EACAC,WADA,EACAC,SADA,EACAC,SADA,QAEA,eAFA;AAGA;AAEA;EACAC;IACAJ,YADA;IAEAC,wBAFA;IAGAC,oBAHA;IAIAC;EAJA,CADA;EAOAE;IACAC;MACAC,aADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAG;IAFA;EALA,CAPA;EAiBAC,IAjBA,kBAiBA;IACA;MACAC,cADA;MAEAC,kBAFA;MAGAC;IAHA;EAKA,CAvBA;EAwBAC;IACAC,SADA,uBACA;MACA;IACA;EAHA,CAxBA;EA6BAC,OA7BA,qBA6BA;IACA;IACA;EACA,CAhCA;EAiCAC;IACAC,aADA,2BACA;MAAA;MACA;MACA;IACA,CAJA;IAKAC,YALA,0BAKA;MACA;IACA,CAPA;IAQAC,aARA,2BAQA;MACA;IACA;EAVA;AAjCA","names":["BCard","BCardHeader","BCardBody","BCollapse","components","props","isVisible","type","default","title","required","data","visible","collapseItemID","openOnHover","computed","accordion","created","methods","updateVisible","collapseOpen","collapseClose"],"sourceRoot":"src/@core/components/app-collapse","sources":["AppCollapseItem.vue"],"sourcesContent":["<template>\n  <b-card\n    no-body\n    :class=\"{'open': visible}\"\n    @mouseenter=\"collapseOpen\"\n    @mouseleave=\"collapseClose\"\n  >\n    <b-card-header\n\n      :class=\"{'collapsed': !visible}\"\n      :aria-expanded=\"visible ? 'true' : 'false'\"\n      :aria-controls=\"collapseItemID\"\n      role=\"tab\"\n      data-toggle=\"collapse\"\n      class=\"px-0 mx-0\"\n      @click=\"updateVisible(!visible)\"\n    >\n      <slot name=\"header\">\n        <span class=\"lead collapse-title\">{{ title }}</span>\n      </slot>\n    </b-card-header>\n\n    <b-collapse\n      :id=\"collapseItemID\"\n      v-model=\"visible\"\n      :accordion=\"accordion\"\n      role=\"tabpanel\"\n    >\n      <b-card-body class=\"px-0\">\n        <slot />\n      </b-card-body>\n    </b-collapse>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardBody, BCollapse,\n} from 'bootstrap-vue'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCollapse,\n  },\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      visible: false,\n      collapseItemID: '',\n      openOnHover: this.$parent.hover,\n    }\n  },\n  computed: {\n    accordion() {\n      return this.$parent.accordion ? `accordion-${this.$parent.collapseID}` : null\n    },\n  },\n  created() {\n    this.collapseItemID = uuidv4()\n    this.visible = this.isVisible\n  },\n  methods: {\n    updateVisible(val = true) {\n      this.visible = val\n      this.$emit('visible', val)\n    },\n    collapseOpen() {\n      if (this.openOnHover) this.updateVisible(true)\n    },\n    collapseClose() {\n      if (this.openOnHover) this.updateVisible(false)\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}