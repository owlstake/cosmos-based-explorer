{"ast":null,"code":"import _defineProperty from \"/root/cosmos-based-explorer/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.math.log10.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ScatterChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { chartColors, formatNumber } from '@/libs/utils';\nuse([CanvasRenderer, ScatterChart, TitleComponent, TooltipComponent, LegendComponent]);\nexport default {\n  name: 'AssetScatter',\n  components: {\n    VChart: VChart\n  },\n  provide: _defineProperty({}, THEME_KEY, 'light'),\n  props: {\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    option: function option() {\n      var colors = chartColors();\n      var series = this.items.filter(function (x) {\n        return x[1] > 0;\n      }).map(function (item, index) {\n        return {\n          name: item[3],\n          data: [item],\n          type: 'scatter',\n          symbolSize: function symbolSize(data) {\n            var r = Math.log10(data[2]) * 5;\n            return r < 10 ? 10 : r;\n          },\n          emphasis: {\n            focus: 'series',\n            label: {\n              show: true,\n              formatter: function formatter(param) {\n                return \"\".concat(param.data[3], \", \").concat(formatNumber(param.data[2], true, 1));\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(120, 36, 50, 0.5)',\n            shadowOffsetY: 5,\n            color: index > colors.length ? colors[0] : colors[index]\n          }\n        };\n      });\n      var assets = this.items.filter(function (x) {\n        return x[1] > 0;\n      }).map(function (x) {\n        return x[3];\n      });\n      return {\n        title: {\n          text: ''\n        },\n        legend: {\n          scroll: 'scroll',\n          data: assets,\n          textStyle: {\n            color: '#aaa'\n          },\n          top: 'top'\n        },\n        grid: {\n          top: \"\".concat(assets.length > 30 ? 30 : assets.length + 20, \"%\")\n        },\n        // */\n        xAxis: {\n          name: 'Qty',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter: function formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n          }\n        },\n        yAxis: {\n          name: 'Price',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter: function formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n          },\n          scale: true\n        },\n        series: series\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAUA;AACA;AACA;AACA,SACAA,cADA,EAEAC,gBAFA,EAGAC,eAHA,QAIA,oBAJA;AAKA;AACA;AAEAC,KACAC,cADA,EAEAC,YAFA,EAGAL,cAHA,EAIAC,gBAJA,EAKAC,eALA;AAQA;EACAI,oBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,6BACAC,SADA,EACA,OADA,CALA;EAQAC;IACAC;MACAC,WADA;MAEAC;QAAA;MAAA;IAFA;EADA,CARA;EAcAC;IACAC,MADA,oBACA;MACA;MACA;QAAA;MAAA;QAAA;UACAV,aADA;UAEAW,YAFA;UAGAJ,eAHA;UAIAK,UAJA,sBAIAD,IAJA,EAIA;YACA;YACA;UACA,CAPA;UAQAE;YACAC,eADA;YAEAC;cACAC,UADA;cAEAC,SAFA,qBAEAC,KAFA,EAEA;gBACA;cACA,CAJA;cAKAC;YALA;UAFA,CARA;UAkBAC;YACAC,cADA;YAEAC,qCAFA;YAGAC,gBAHA;YAIAC;UAJA;QAlBA;MAAA;MAyBA;QAAA;MAAA;QAAA;MAAA;MACA;QACAC;UACAC;QADA,CADA;QAIAC;UACAC,gBADA;UAEAjB,YAFA;UAGAkB;YACAL;UADA,CAHA;UAMAM;QANA,CAJA;QAYAC;UAAAD;QAAA,CAZA;QAYA;QACAE;UACAhC,WADA;UAEAiC,sBAFA;UAGAC;YACAlB,WADA;YAEAC,SAFA,qBAEAC,KAFA,EAEA;cACA;YACA;UAJA;QAHA,CAbA;QAuBAiB;UACAnC,aADA;UAEAiC,sBAFA;UAGAC;YACAlB,WADA;YAEAC,SAFA,qBAEAC,KAFA,EAEA;cACA;YACA;UAJA,CAHA;UASAkB;QATA,CAvBA;QAkCAC;MAlCA;IAoCA;EAjEA;AAdA","names":["TitleComponent","TooltipComponent","LegendComponent","use","CanvasRenderer","ScatterChart","name","components","VChart","provide","THEME_KEY","props","items","type","default","computed","option","data","symbolSize","emphasis","focus","label","show","formatter","param","position","itemStyle","shadowBlur","shadowColor","shadowOffsetY","color","title","text","legend","scroll","textStyle","top","grid","xAxis","nameLocation","axisLabel","yAxis","scale","series"],"sourceRoot":"src/views/components/charts","sources":["EchartScatter.vue"],"sourcesContent":["<template>\n  <div>\n    <v-chart\n      class=\"chart\"\n      autoresize\n      :option=\"option\"\n    /></div>\n</template>\n\n<script>\nimport { use } from 'echarts/core'\nimport { CanvasRenderer } from 'echarts/renderers'\nimport { ScatterChart } from 'echarts/charts'\nimport {\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n} from 'echarts/components'\nimport VChart, { THEME_KEY } from 'vue-echarts'\nimport { chartColors, formatNumber } from '@/libs/utils'\n\nuse([\n  CanvasRenderer,\n  ScatterChart,\n  TitleComponent,\n  TooltipComponent,\n  LegendComponent,\n])\n\nexport default {\n  name: 'AssetScatter',\n  components: {\n    VChart,\n  },\n  provide: {\n    [THEME_KEY]: 'light',\n  },\n  props: {\n    items: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  computed: {\n    option() {\n      const colors = chartColors()\n      const series = this.items.filter(x => x[1] > 0).map((item, index) => ({\n        name: item[3],\n        data: [item],\n        type: 'scatter',\n        symbolSize(data) {\n          const r = Math.log10(data[2]) * 5\n          return r < 10 ? 10 : r\n        },\n        emphasis: {\n          focus: 'series',\n          label: {\n            show: true,\n            formatter(param) {\n              return `${param.data[3]}, ${formatNumber(param.data[2], true, 1)}`\n            },\n            position: 'top',\n          },\n        },\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(120, 36, 50, 0.5)',\n          shadowOffsetY: 5,\n          color: index > colors.length ? colors[0] : colors[index],\n        },\n      }))\n      const assets = this.items.filter(x => x[1] > 0).map(x => x[3])\n      return {\n        title: {\n          text: '',\n        },\n        legend: {\n          scroll: 'scroll',\n          data: assets,\n          textStyle: {\n            color: '#aaa',\n          },\n          top: 'top',\n        },\n        grid: { top: `${assets.length > 30 ? 30 : assets.length + 20}%` }, // */\n        xAxis: {\n          name: 'Qty',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter(param) {\n              return formatNumber(param, true, 0)\n            },\n          },\n        },\n        yAxis: {\n          name: 'Price',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter(param) {\n              return formatNumber(param, true, 0)\n            },\n          },\n          scale: true,\n        },\n        series,\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.chart {\n  min-height: 300px;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}