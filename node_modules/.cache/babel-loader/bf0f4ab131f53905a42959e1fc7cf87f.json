{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BFormInput, BFormText } from 'bootstrap-vue';\nimport { ref } from '@vue/composition-api';\nimport { title } from '@core/utils/filter';\nimport store from '@/store';\nexport default {\n  components: {\n    BFormInput: BFormInput,\n    BFormText: BFormText\n  },\n  setup: function setup() {\n    var showSearchBar = ref(false);\n    var perfectScrollbarSettings = {\n      maxScrollbarLength: 60\n    };\n    return {\n      showSearchBar: showSearchBar,\n      perfectScrollbarSettings: perfectScrollbarSettings,\n      title: title\n    };\n  },\n  data: function data() {\n    return {\n      searchQuery: null,\n      error: null\n    };\n  },\n  methods: {\n    reset: function reset() {\n      this.showSearchBar = false;\n      this.searchQuery = null;\n      this.error = null;\n    },\n    doQuery: function doQuery() {\n      var height = /^\\d+$/;\n      var txhash = /^[A-Z\\d]{64}$/;\n      var addr = /^[a-z]+1[a-z\\d]{38}$/;\n      var key = this.searchQuery;\n      var c = store.state.chains.selected;\n\n      if (!Object.values(this.$route.params).includes(key)) {\n        if (height.test(key)) {\n          this.$router.push({\n            name: 'block',\n            params: {\n              chain: c.chain_name,\n              height: key\n            }\n          });\n        } else if (txhash.test(key)) {\n          this.$router.push({\n            name: 'transaction',\n            params: {\n              chain: c.chain_name,\n              hash: key\n            }\n          });\n        } else if (addr.test(key)) {\n          this.$router.push({\n            name: 'chain-account',\n            params: {\n              chain: c.chain_name,\n              address: key\n            }\n          });\n        } else {\n          this.error = 'The input not recognized';\n        }\n      } // this.$router.push('/')\n\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AAEA;EACAA;IACAC,sBADA;IAEAC;EAFA,CADA;EAKAC,KALA,mBAKA;IACA;IAEA;MACAC;IADA;IAIA;MACAC,4BADA;MAEAC,kDAFA;MAGAC;IAHA;EAKA,CAjBA;EAkBAC,IAlBA,kBAkBA;IACA;MACAC,iBADA;MAEAC;IAFA;EAIA,CAvBA;EAwBAC;IACAC,KADA,mBACA;MACA;MACA;MACA;IACA,CALA;IAMAC,OANA,qBAMA;MACA;MACA;MACA;MACA;MAEA;;MACA;QACA;UACA;YAAAC;YAAAC;cAAAC;cAAAC;YAAA;UAAA;QACA,CAFA,MAEA;UACA;YAAAH;YAAAC;cAAAC;cAAAE;YAAA;UAAA;QACA,CAFA,MAEA;UACA;YAAAJ;YAAAC;cAAAC;cAAAG;YAAA;UAAA;QACA,CAFA,MAEA;UACA;QACA;MACA,CAjBA,CAkBA;;IACA;EAzBA;AAxBA","names":["components","BFormInput","BFormText","setup","maxScrollbarLength","showSearchBar","perfectScrollbarSettings","title","data","searchQuery","error","methods","reset","doQuery","name","params","chain","height","hash","address"],"sourceRoot":"src/@core/layouts/components/app-navbar/components","sources":["SearchBar.vue"],"sourcesContent":["<template>\n  <li class=\"nav-item nav-search\">\n\n    <!-- Icon -->\n    <a\n      href=\"javascript:void(0)\"\n      class=\"nav-link nav-link-search\"\n      @click=\"showSearchBar = true\"\n    >\n      <feather-icon\n        icon=\"SearchIcon\"\n        size=\"21\"\n      />\n    </a>\n\n    <!-- Input -->\n    <div\n      class=\"search-input\"\n      :class=\"{'open': showSearchBar}\"\n    >\n      <div class=\"search-input-icon\">\n        <feather-icon icon=\"SearchIcon\" />\n      </div>\n      <!-- <input type=\"text\" placeholder=\"Explore Vuexy....\" class=\"form-control-input\"> -->\n      <!-- @keyup.esc=\"escPressed\" -->\n      <!-- @keyup.enter=\"suggestionSelected\" -->\n      <b-form-input\n        v-if=\"showSearchBar\"\n        v-model=\"searchQuery\"\n        placeholder=\"Search Height/Transaction/Account Address\"\n        :state=\"false\"\n        autocomplete=\"off\"\n        @keyup.enter=\"doQuery\"\n      />\n      <b-form-text class=\"text-danger pl-3\">\n        {{ error }}\n      </b-form-text>\n      <div\n        class=\"search-input-close\"\n        @click=\"reset()\"\n      >\n        <feather-icon icon=\"XIcon\" />\n      </div>\n    </div>\n  </li>\n</template>\n\n<script>\nimport { BFormInput, BFormText } from 'bootstrap-vue'\nimport { ref } from '@vue/composition-api'\nimport { title } from '@core/utils/filter'\nimport store from '@/store'\n\nexport default {\n  components: {\n    BFormInput,\n    BFormText,\n  },\n  setup() {\n    const showSearchBar = ref(false)\n\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 60,\n    }\n\n    return {\n      showSearchBar,\n      perfectScrollbarSettings,\n      title,\n    }\n  },\n  data() {\n    return {\n      searchQuery: null,\n      error: null,\n    }\n  },\n  methods: {\n    reset() {\n      this.showSearchBar = false\n      this.searchQuery = null\n      this.error = null\n    },\n    doQuery() {\n      const height = /^\\d+$/\n      const txhash = /^[A-Z\\d]{64}$/\n      const addr = /^[a-z]+1[a-z\\d]{38}$/\n      const key = this.searchQuery\n\n      const c = store.state.chains.selected\n      if (!Object.values(this.$route.params).includes(key)) {\n        if (height.test(key)) {\n          this.$router.push({ name: 'block', params: { chain: c.chain_name, height: key } })\n        } else if (txhash.test(key)) {\n          this.$router.push({ name: 'transaction', params: { chain: c.chain_name, hash: key } })\n        } else if (addr.test(key)) {\n          this.$router.push({ name: 'chain-account', params: { chain: c.chain_name, address: key } })\n        } else {\n          this.error = 'The input not recognized'\n        }\n      }\n      // this.$router.push('/')\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@core/scss/base/bootstrap-extended/include';\n@import '~@core/scss/base/components/variables-dark';\n\nul\n{\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\np {\n  margin: 0;\n}\n\n/* .app-auto-suggest {\n  position: relative;\n}\n\n.auto-suggest-suggestions-list {\n  box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.1);\n  border-radius: 6px;\n  position: absolute;\n  top: calc(100% + 1rem);\n  background-color: white;\n  width: 100%;\n} */\n\n.suggestion-group-title {\n  font-weight: 500;\n  padding: .75rem 1rem .25rem;\n}\n\n.suggestion-group-suggestion {\n  padding: .75rem 1rem\n}\n\n.suggestion-current-selected {\n  background-color: $body-bg;\n\n  .dark-layout & {\n    background-color: $theme-dark-body-bg;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}