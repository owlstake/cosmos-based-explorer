{"ast":null,"code":"import { ref, computed } from '@vue/composition-api';\nimport store from '@/store';\nexport default function useVerticalNavMenu(props) {\n  // ------------------------------------------------\n  // isVerticalMenuCollapsed\n  // ------------------------------------------------\n  var isVerticalMenuCollapsed = computed({\n    get: function get() {\n      return store.state.verticalMenu.isVerticalMenuCollapsed;\n    },\n    set: function set(val) {\n      store.commit('verticalMenu/UPDATE_VERTICAL_MENU_COLLAPSED', val);\n    }\n  }); // ------------------------------------------------\n  // collapseTogglerIcon\n  // ------------------------------------------------\n\n  var collapseTogglerIcon = computed(function () {\n    if (props.isVerticalMenuActive) {\n      return isVerticalMenuCollapsed.value ? 'unpinned' : 'pinned';\n    }\n\n    return 'close';\n  });\n  var isMouseHovered = ref(false);\n\n  var updateMouseHovered = function updateMouseHovered(val) {\n    isMouseHovered.value = val;\n  };\n\n  var toggleCollapsed = function toggleCollapsed() {\n    isVerticalMenuCollapsed.value = !isVerticalMenuCollapsed.value;\n  };\n\n  return {\n    isMouseHovered: isMouseHovered,\n    isVerticalMenuCollapsed: isVerticalMenuCollapsed,\n    collapseTogglerIcon: collapseTogglerIcon,\n    toggleCollapsed: toggleCollapsed,\n    updateMouseHovered: updateMouseHovered\n  };\n}","map":{"version":3,"names":["ref","computed","store","useVerticalNavMenu","props","isVerticalMenuCollapsed","get","state","verticalMenu","set","val","commit","collapseTogglerIcon","isVerticalMenuActive","value","isMouseHovered","updateMouseHovered","toggleCollapsed"],"sources":["/root/cosmos-based-explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/useVerticalNavMenu.js"],"sourcesContent":["import { ref, computed } from '@vue/composition-api'\nimport store from '@/store'\n\nexport default function useVerticalNavMenu(props) {\n  // ------------------------------------------------\n  // isVerticalMenuCollapsed\n  // ------------------------------------------------\n  const isVerticalMenuCollapsed = computed({\n    get: () => store.state.verticalMenu.isVerticalMenuCollapsed,\n    set: val => {\n      store.commit('verticalMenu/UPDATE_VERTICAL_MENU_COLLAPSED', val)\n    },\n  })\n\n  // ------------------------------------------------\n  // collapseTogglerIcon\n  // ------------------------------------------------\n  const collapseTogglerIcon = computed(() => {\n    if (props.isVerticalMenuActive) {\n      return isVerticalMenuCollapsed.value ? 'unpinned' : 'pinned'\n    }\n    return 'close'\n  })\n\n  const isMouseHovered = ref(false)\n\n  const updateMouseHovered = val => {\n    isMouseHovered.value = val\n  }\n\n  const toggleCollapsed = () => {\n    isVerticalMenuCollapsed.value = !isVerticalMenuCollapsed.value\n  }\n\n  return {\n    isMouseHovered,\n    isVerticalMenuCollapsed,\n    collapseTogglerIcon,\n    toggleCollapsed,\n    updateMouseHovered,\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,sBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAChD;EACA;EACA;EACA,IAAMC,uBAAuB,GAAGJ,QAAQ,CAAC;IACvCK,GAAG,EAAE;MAAA,OAAMJ,KAAK,CAACK,KAAN,CAAYC,YAAZ,CAAyBH,uBAA/B;IAAA,CADkC;IAEvCI,GAAG,EAAE,aAAAC,GAAG,EAAI;MACVR,KAAK,CAACS,MAAN,CAAa,6CAAb,EAA4DD,GAA5D;IACD;EAJsC,CAAD,CAAxC,CAJgD,CAWhD;EACA;EACA;;EACA,IAAME,mBAAmB,GAAGX,QAAQ,CAAC,YAAM;IACzC,IAAIG,KAAK,CAACS,oBAAV,EAAgC;MAC9B,OAAOR,uBAAuB,CAACS,KAAxB,GAAgC,UAAhC,GAA6C,QAApD;IACD;;IACD,OAAO,OAAP;EACD,CALmC,CAApC;EAOA,IAAMC,cAAc,GAAGf,GAAG,CAAC,KAAD,CAA1B;;EAEA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAN,GAAG,EAAI;IAChCK,cAAc,CAACD,KAAf,GAAuBJ,GAAvB;EACD,CAFD;;EAIA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5BZ,uBAAuB,CAACS,KAAxB,GAAgC,CAACT,uBAAuB,CAACS,KAAzD;EACD,CAFD;;EAIA,OAAO;IACLC,cAAc,EAAdA,cADK;IAELV,uBAAuB,EAAvBA,uBAFK;IAGLO,mBAAmB,EAAnBA,mBAHK;IAILK,eAAe,EAAfA,eAJK;IAKLD,kBAAkB,EAAlBA;EALK,CAAP;AAOD"},"metadata":{},"sourceType":"module"}