{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BTable, BCard, BCardHeader, BCardTitle, VBTooltip } from 'bootstrap-vue';\nimport { getCachedValidators, getStakingValidatorByHex, toDay } from '@/libs/utils'; // import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard: BCard,\n    BTable: BTable,\n    BCardHeader: BCardHeader,\n    BCardTitle: BCardTitle\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      islive: true,\n      blocks: [],\n      list_fields: [{\n        key: 'height',\n        sortable: true\n      }, {\n        key: 'hash',\n        thClass: 'd-none d-lg-block',\n        tdClass: 'd-none d-lg-block text-truncate'\n      }, {\n        key: 'proposer',\n        tdClass: 'text-truncate'\n      }, {\n        key: 'txs'\n      }, {\n        key: 'time',\n        thClass: 'd-none d-md-block',\n        tdClass: 'd-none d-md-block'\n      }]\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.getLatestBlock().then(function (res) {\n      _this.blocks.push(res);\n\n      var list = [];\n      var height = res.block.header.height;\n\n      for (var i = 1; i < 10; i += 1) {\n        list.push(height - i);\n      }\n\n      if (!getCachedValidators()) {\n        _this.$http.getValidatorList();\n      }\n\n      var promise = Promise.resolve();\n      list.forEach(function (item) {\n        promise = promise.then(function () {\n          return new Promise(function (resolve) {\n            _this.$http.getBlockByHeight(item).then(function (b) {\n              resolve();\n\n              _this.blocks.push(b);\n            });\n          });\n        });\n      });\n      _this.timer = setInterval(_this.fetch, 6000);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.islive = false;\n    clearInterval(this.timer);\n  },\n  methods: {\n    length: function length(v) {\n      return Array.isArray(v) ? v.length : 0;\n    },\n    formatTime: function formatTime(v) {\n      return toDay(v, 'time');\n    },\n    formatProposer: function formatProposer(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v);\n    },\n    fetch: function fetch() {\n      var _this2 = this;\n\n      this.$http.getLatestBlock().then(function (b) {\n        var has = _this2.blocks.findIndex(function (x) {\n          return x.block.header.height === b.block.header.height;\n        });\n\n        if (has < 0) _this2.blocks.unshift(b);\n        if (_this2.blocks.length > 200) _this2.blocks.pop();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SACAA,MADA,EACAC,KADA,EACAC,WADA,EACAC,UADA,EACAC,SADA,QAEA,eAFA;AAGA,SACAC,mBADA,EAEAC,wBAFA,EAGAC,KAHA,QAIA,cAJA,C,CAKA;;AAEA;EACAC;IACAP,YADA;IAEAD,cAFA;IAGAE,wBAHA;IAIAC;EAJA,CADA;EAOAM;IACA;EADA,CAPA;EAUAC,IAVA,kBAUA;IACA;MACAC,YADA;MAEAC,UAFA;MAGAC,cACA;QACAC,aADA;QAEAC;MAFA,CADA,EAKA;QACAD,WADA;QAEAE,4BAFA;QAGAC;MAHA,CALA,EAUA;QACAH,eADA;QAEAG;MAFA,CAVA,EAcA;QACAH;MADA,CAdA,EAiBA;QACAA,WADA;QAEAE,4BAFA;QAGAC;MAHA,CAjBA;IAHA;EA2BA,CAtCA;EAuCAC,OAvCA,qBAuCA;IAAA;;IACA;MACA;;MACA;MACA;;MACA;QACAC;MACA;;MAEA;QACA;MACA;;MAEA;MACAA;QACAC;UAAA;YACA;cACAC;;cACA;YACA,CAHA;UAIA,CALA;QAAA;MAMA,CAPA;MAQA;IACA,CAtBA;EAuBA,CA/DA;EAgEAC,aAhEA,2BAgEA;IACA;IACAC;EACA,CAnEA;EAoEAC;IACAC;MAAA;IAAA,CADA;IAEAC;MAAA;IAAA,CAFA;IAGAC,cAHA,0BAGAC,CAHA,EAGA;MACA;IACA,CALA;IAMAC,KANA,mBAMA;MAAA;;MACA;QACA;UAAA;QAAA;;QACA;QACA;MACA,CAJA;IAKA;EAZA;AApEA","names":["BTable","BCard","BCardHeader","BCardTitle","VBTooltip","getCachedValidators","getStakingValidatorByHex","toDay","components","directives","data","islive","blocks","list_fields","key","sortable","thClass","tdClass","created","list","promise","resolve","beforeDestroy","clearInterval","methods","length","formatTime","formatProposer","v","fetch"],"sourceRoot":"src/views","sources":["Blocks.vue"],"sourcesContent":["<template>\n  <div>\n    <b-card\n      no-body\n      class=\"text-truncate\"\n    >\n      <b-card-header>\n        <b-card-title>\n          Blocks\n        </b-card-title>\n      </b-card-header>\n      <b-table\n        :items=\"blocks\"\n        :fields=\"list_fields\"\n        :sort-desc=\"true\"\n        sort-by=\"tokens\"\n        striped\n        hover\n        stacked=\"sm\"\n      >\n        <!-- Column: Height -->\n        <template #cell(height)=\"data\">\n          <router-link :to=\"`./blocks/${data.item.block.header.height}`\">\n            {{ data.item.block.header.height }}\n          </router-link>\n        </template>\n        <template #cell(hash)=\"data\">\n          <small>{{ data.item.block_id.hash }}</small>\n        </template>\n        <template #cell(time)=\"data\">\n          {{ formatTime(data.item.block.header.time) }}\n        </template>\n        <template #cell(proposer)=\"data\">\n          {{ formatProposer(data.item.block.header.proposer_address) }}\n        </template>\n        <template #cell(txs)=\"data\">\n          {{ length(data.item.block.data.txs) }}\n        </template>\n\n      </b-table>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport {\n  BTable, BCard, BCardHeader, BCardTitle, VBTooltip,\n} from 'bootstrap-vue'\nimport {\n  getCachedValidators,\n  getStakingValidatorByHex,\n  toDay,\n} from '@/libs/utils'\n// import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard,\n    BTable,\n    BCardHeader,\n    BCardTitle,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n  },\n  data() {\n    return {\n      islive: true,\n      blocks: [],\n      list_fields: [\n        {\n          key: 'height',\n          sortable: true,\n        },\n        {\n          key: 'hash',\n          thClass: 'd-none d-lg-block',\n          tdClass: 'd-none d-lg-block text-truncate',\n        },\n        {\n          key: 'proposer',\n          tdClass: 'text-truncate',\n        },\n        {\n          key: 'txs',\n        },\n        {\n          key: 'time',\n          thClass: 'd-none d-md-block',\n          tdClass: 'd-none d-md-block',\n        },\n      ],\n    }\n  },\n  created() {\n    this.$http.getLatestBlock().then(res => {\n      this.blocks.push(res)\n      const list = []\n      const { height } = res.block.header\n      for (let i = 1; i < 10; i += 1) {\n        list.push(height - i)\n      }\n\n      if (!getCachedValidators()) {\n        this.$http.getValidatorList()\n      }\n\n      let promise = Promise.resolve()\n      list.forEach(item => {\n        promise = promise.then(() => new Promise(resolve => {\n          this.$http.getBlockByHeight(item).then(b => {\n            resolve()\n            this.blocks.push(b)\n          })\n        }))\n      })\n      this.timer = setInterval(this.fetch, 6000)\n    })\n  },\n  beforeDestroy() {\n    this.islive = false\n    clearInterval(this.timer)\n  },\n  methods: {\n    length: v => (Array.isArray(v) ? v.length : 0),\n    formatTime: v => toDay(v, 'time'),\n    formatProposer(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v)\n    },\n    fetch() {\n      this.$http.getLatestBlock().then(b => {\n        const has = this.blocks.findIndex(x => x.block.header.height === b.block.header.height)\n        if (has < 0) this.blocks.unshift(b)\n        if (this.blocks.length > 200) this.blocks.pop()\n      })\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}