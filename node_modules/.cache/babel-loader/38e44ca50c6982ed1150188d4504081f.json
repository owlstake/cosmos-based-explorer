{"ast":null,"code":"import _asyncToGenerator from \"/root/cosmos-based-explorer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar long_1 = __importDefault(require(\"long\"));\n\nimport { BFormInput, BButton, BAlert, BFormGroup, BInputGroup, BInputGroupAppend, BFormRadio, BFormRadioGroup, BCard, BPopover } from 'bootstrap-vue';\nimport FeatherIcon from '@core/components/feather-icon/FeatherIcon.vue';\nimport { formatTokenAmount, getLocalAccounts, percent, setLocalTxHistory, sign } from '@/libs/utils';\nimport { getPairName } from '@/libs/osmos';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue';\nimport DepositeWindow from './DepositeWindow.vue';\nexport default {\n  components: {\n    BAlert: BAlert,\n    BButton: BButton,\n    BCard: BCard,\n    BFormInput: BFormInput,\n    BFormRadio: BFormRadio,\n    BFormRadioGroup: BFormRadioGroup,\n    BFormGroup: BFormGroup,\n    BPopover: BPopover,\n    BInputGroup: BInputGroup,\n    BInputGroupAppend: BInputGroupAppend,\n    FeatherIcon: FeatherIcon,\n    DepositeWindow: DepositeWindow,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent: ToastificationContent\n  },\n  props: {\n    type: {\n      type: Number,\n      required: true\n    },\n    pool: {\n      type: Object,\n      default: function _default() {}\n    },\n    denomTrace: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      address: '',\n      amount: '',\n      total: '',\n      slippage: 0.05,\n      marks: [0, 0.01, 0.025, 0.05],\n      balance: {},\n      error: null,\n      chainId: 'osmosis-1',\n      wallet: 'keplr',\n      // base: '',\n      // target: '',\n      dismissSecs: 15,\n      dismissCountDown: 0\n    };\n  },\n  computed: {\n    base: function base() {\n      return getPairName(this.pool, this.denomTrace, 'base');\n    },\n    target: function target() {\n      return getPairName(this.pool, this.denomTrace, 'target');\n    },\n    price: function price() {\n      var p1 = this.$store.state.chains.quotes[this.base];\n      var p2 = this.$store.state.chains.quotes[this.target];\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-';\n    },\n    localPrice: function localPrice() {\n      var p1 = this.$store.state.chains.quotes[this.target];\n      return p1 && this.total > 0 ? (p1.usd * this.total).toFixed(2) : '-';\n    },\n    currentDenom: function currentDenom() {\n      if (this.pool && this.pool.poolAssets) {\n        var mode = this.type === 1 ? 0 : 1;\n        var denom = this.pool.poolAssets[mode].token.denom;\n        return denom;\n      }\n\n      return '';\n    },\n    available: function available() {\n      var _this = this;\n\n      if (this.pool && this.pool.poolAssets) {\n        var amount = 0;\n\n        if (Array.isArray(this.balance)) {\n          this.balance.forEach(function (x) {\n            if (x.denom === _this.currentDenom) {\n              amount = x.amount;\n            }\n          });\n        }\n\n        return formatTokenAmount(amount, 6, this.currentDenom);\n      }\n\n      return 0;\n    },\n    fee: function fee() {\n      var _this$pool, _this$pool$poolParams;\n\n      return percent(((_this$pool = this.pool) === null || _this$pool === void 0 ? void 0 : (_this$pool$poolParams = _this$pool.poolParams) === null || _this$pool$poolParams === void 0 ? void 0 : _this$pool$poolParams.swapFee) || '');\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.initialAddress();\n    this.$http.getBankBalances(this.address).then(function (res) {\n      if (res && res.length > 0) {\n        _this2.balance = res;\n      }\n    });\n    this.$http.getAuthAccount(this.address, this.selectedChain).then(function (ret) {\n      if (ret.value.base_vesting_account) {\n        _this2.accountNumber = ret.value.base_vesting_account.base_account.account_number;\n        _this2.sequence = ret.value.base_vesting_account.base_account.sequence;\n        if (!_this2.sequence) _this2.sequence = 0;\n      } else {\n        _this2.accountNumber = ret.value.account_number;\n        _this2.sequence = ret.value.sequence ? ret.value.sequence : 0;\n      }\n    });\n  },\n  methods: {\n    initialAddress: function initialAddress() {\n      var chain = this.$route.params.chain;\n      var accounts = getLocalAccounts();\n      var current = this.$store.state.chains.defaultWallet;\n\n      if (accounts && accounts[current]) {\n        var acc = accounts[current].address.find(function (x) {\n          return x.chain === chain;\n        });\n\n        if (acc) {\n          this.address = acc.addr;\n        }\n      }\n    },\n    formatAvailable: function formatAvailable() {},\n    changeAmount: function changeAmount() {\n      this.total = parseFloat((this.amount * this.price).toFixed(6));\n    },\n    changeTotal: function changeTotal() {\n      this.amount = parseFloat((this.total / this.price).toFixed(6));\n    },\n    sendTx: function sendTx() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var tokenOutDenom, denom, txMsgs, txFee, signerData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenOutDenom = _this3.pool.poolAssets[_this3.type === 0 ? 0 : 1].token.denom;\n                denom = _this3.pool.poolAssets[_this3.type === 0 ? 1 : 0].token.denom;\n                txMsgs = [{\n                  typeUrl: '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn',\n                  value: {\n                    sender: _this3.address,\n                    routes: [{\n                      poolId: long_1.default.fromString(_this3.pool.id),\n                      tokenOutDenom: tokenOutDenom\n                    }],\n                    tokenIn: {\n                      denom: denom,\n                      amount: long_1.default.fromNumber(parseInt(_this3.amount * 1000000, 10))\n                    },\n                    tokenOutMinAmount: long_1.default.fromNumber(parseInt(_this3.total * 1000000, 10))\n                  }\n                }];\n\n                if (!(txMsgs.length === 0)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _this3.error = 'No delegation found';\n                _this3.dismissCountDown = _this3.dismissSecs;\n                return _context.abrupt(\"return\", '');\n\n              case 7:\n                if (_this3.accountNumber) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _this3.error = 'Account number should not be empty!';\n                _this3.dismissCountDown = _this3.dismissSecs;\n                return _context.abrupt(\"return\", '');\n\n              case 11:\n                txFee = {\n                  amount: [{\n                    amount: '800',\n                    // this.fee,\n                    denom: 'uomos' // this.feeDenom,\n\n                  }],\n                  gas: '200000' // this.gas,\n\n                };\n                signerData = {\n                  accountNumber: _this3.accountNumber,\n                  sequence: _this3.sequence,\n                  chainId: _this3.chainId\n                };\n                sign(_this3.wallet, _this3.chainId, _this3.address, txMsgs, txFee, 'Sent Via https://owlstake.com', signerData).then(function (bodyBytes) {\n                  _this3.$http.broadcastTx(bodyBytes).then(function (res) {\n                    setLocalTxHistory({\n                      op: 'swap',\n                      hash: res.tx_response.txhash,\n                      time: new Date()\n                    });\n\n                    _this3.$toast({\n                      component: ToastificationContent,\n                      props: {\n                        title: 'Transaction sent!',\n                        icon: 'EditIcon',\n                        variant: 'success'\n                      }\n                    });\n                  }).catch(function (e) {\n                    _this3.error = e;\n                  });\n                }).catch(function (e) {\n                  _this3.error = e;\n                  _this3.dismissCountDown = _this3.dismissSecs;\n                }); // Send tokens\n                // return client.sendTokens(this.address, this.recipient, sendCoins, this.memo)\n\n                return _context.abrupt(\"return\", '');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["BFormInput","BButton","BAlert","BFormGroup","BInputGroup","BInputGroupAppend","BFormRadio","BFormRadioGroup","BCard","BPopover","formatTokenAmount","getLocalAccounts","percent","setLocalTxHistory","sign","components","FeatherIcon","DepositeWindow","ToastificationContent","props","type","required","pool","default","denomTrace","data","address","amount","total","slippage","marks","balance","error","chainId","wallet","dismissSecs","dismissCountDown","computed","base","target","price","localPrice","currentDenom","available","fee","created","methods","initialAddress","formatAvailable","changeAmount","changeTotal","sendTx","tokenOutDenom","denom","txMsgs","typeUrl","value","sender","routes","poolId","tokenIn","tokenOutMinAmount","txFee","gas","signerData","accountNumber","sequence","then","op","hash","time","component","title","icon","variant","catch","countDownChanged"],"sourceRoot":"src/views/components/KlineTrade","sources":["PlaceForm.vue"],"sourcesContent":["<template>\n  <div>\n    <b-card\n      bg-variant=\"light-secondary\"\n      text-variant=\"black\"\n    >\n      <div class=\"d-flex justify-content-between\">\n        <span class=\"font-weight-bolder\">Balance </span>\n        <span>\n          <feather-icon\n            v-if=\"currentDenom.startsWith('ibc/')\"\n            v-b-modal.trading-deposte-window\n            icon=\"PlusSquareIcon\"\n            class=\"text-primary\"\n          />\n          <small> {{ available }} {{ type === 0 ? target: base }} </small>\n        </span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Price</span>\n        <span>{{ price }}&nbsp;<small class=\"text-muted mx-10\">{{ target }} ≈</small>&nbsp;1&nbsp;<small class=\"text-muted mx-10\"> {{ base }}</small>&nbsp;</span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Swap Fee</span>\n        <span>{{ fee }}%</span>\n      </div>\n    </b-card>\n    <b-form-group>\n      <div>\n        <span>Quantity</span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"amount\"\n          v-model=\"amount\"\n          type=\"number\"\n          placeholder=\"Quantity\"\n          @change=\"changeAmount()\"\n        />\n        <b-input-group-append is-text>\n          {{ base }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 1 && amount > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-form-group>\n      <div class=\"d-flex justify-content-between\">\n        <span>Volume</span>\n        <span>\n          <small\n            v-if=\"localPrice > 0\"\n            class=\"text-muted mr-1\"\n          >≈${{ localPrice }}</small>\n          <feather-icon\n            id=\"popover-trading-setting\"\n            icon=\"SettingsIcon\"\n            class=\"text-primary\"\n          />\n        </span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"total\"\n          v-model=\"total\"\n          type=\"number\"\n          placeholder=\"Volume\"\n          @change=\"changeTotal()\"\n        />\n        <b-input-group-append is-text>\n          {{ target }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 0 && total > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-popover\n      target=\"popover-trading-setting\"\n      placement=\"left\"\n      triggers=\"hover\"\n      boundary=\"scrollParent\"\n      boundary-padding=\"0\"\n      class=\"px-0\"\n    >\n      <b-form-group>\n        <label for=\"slip\">\n          Slippage Tolerance\n        </label>\n        <div id=\"slip\">\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.01\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            1%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.025\"\n            button\n            block\n            class=\"px-1\"\n            button-variant=\"outline-secondary\"\n          >\n            2.5%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.05\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            5%\n          </b-form-radio>\n        </div>\n      </b-form-group>\n    </b-popover>\n    <b-form-group\n      label=\"Signer\"\n      label-for=\"wallet\"\n    >\n      <b-form-radio-group\n        v-model=\"wallet\"\n        inline\n      >\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"keplr\"\n        >\n          <small>Keplr</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerUSB\"\n        >\n          <small>Ledger(USB)</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerBle\"\n          class=\"mr-0\"\n        >\n          <small>Ledger(BLE)</small>\n        </b-form-radio>\n      </b-form-radio-group>\n    </b-form-group>\n    <b-form-group>\n      <b-button\n        v-if=\"address\"\n        block\n        :disabled=\"type === 0? total > available : amount > available\"\n        :variant=\"type === 0 ? 'success': 'danger'\"\n        @click=\"sendTx()\"\n      >\n        {{ type === 0 ? `Buy ${ base }` : `Sell ${ base }` }}\n      </b-button>\n      <b-button\n        v-else\n        to=\"/wallet/import\"\n        block\n        variant=\"primary\"\n      >\n        Connect Wallet\n      </b-button>\n\n    </b-form-group>\n    <b-alert\n      variant=\"danger\"\n      :show=\"dismissCountDown\"\n      dismissible\n      @dismissed=\"dismissCountDown=0\"\n      @dismiss-count-down=\"countDownChanged\"\n    >\n      <div class=\"alert-body\">\n        {{ error }}\n      </div>\n    </b-alert>\n    <b-alert\n      class=\"mt-2\"\n      variant=\"danger\"\n      show\n    >\n      <div class=\"alert-heading\">\n        Note\n      </div>\n      <div class=\"alert-body\">\n        Trading is not available. will open soon.\n        <div class=\"d-none\">\n          If the execution price exceeds the {{ slippage * 100 }}% slippage protection, your order will be automatically cancelled\n        </div>\n      </div>\n    </b-alert>\n\n    <deposite-window\n      :symbol=\"type === 0 ? target: base\"\n      :denom-trace=\"denomTrace[currentDenom]\"\n    />\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst long_1 = __importDefault(require(\"long\"));\nimport {\n  BFormInput, BButton, BAlert, BFormGroup, BInputGroup, BInputGroupAppend, BFormRadio, BFormRadioGroup, BCard, BPopover,\n} from 'bootstrap-vue'\nimport FeatherIcon from '@core/components/feather-icon/FeatherIcon.vue'\nimport {\n  formatTokenAmount, getLocalAccounts, percent, setLocalTxHistory, sign,\n} from '@/libs/utils'\nimport { getPairName } from '@/libs/osmos'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport DepositeWindow from './DepositeWindow.vue'\n\nexport default {\n  components: {\n    BAlert,\n    BButton,\n    BCard,\n    BFormInput,\n    BFormRadio,\n    BFormRadioGroup,\n    BFormGroup,\n    BPopover,\n    BInputGroup,\n    BInputGroupAppend,\n    FeatherIcon,\n    DepositeWindow,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n  },\n  props: {\n    type: {\n      type: Number,\n      required: true,\n    },\n    pool: {\n      type: Object,\n      default: () => {},\n    },\n    denomTrace: {\n      type: [Array, Object],\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      address: '',\n      amount: '',\n      total: '',\n      slippage: 0.05,\n      marks: [0, 0.01, 0.025, 0.05],\n      balance: {},\n      error: null,\n      chainId: 'osmosis-1',\n      wallet: 'keplr',\n      // base: '',\n      // target: '',\n      dismissSecs: 15,\n      dismissCountDown: 0,\n    }\n  },\n  computed: {\n    base() {\n      return getPairName(this.pool, this.denomTrace, 'base')\n    },\n    target() {\n      return getPairName(this.pool, this.denomTrace, 'target')\n    },\n    price() {\n      const p1 = this.$store.state.chains.quotes[this.base]\n      const p2 = this.$store.state.chains.quotes[this.target]\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-'\n    },\n    localPrice() {\n      const p1 = this.$store.state.chains.quotes[this.target]\n      return p1 && this.total > 0 ? (p1.usd * this.total).toFixed(2) : '-'\n    },\n    currentDenom() {\n      if (this.pool && this.pool.poolAssets) {\n        const mode = this.type === 1 ? 0 : 1\n        const { denom } = this.pool.poolAssets[mode].token\n        return denom\n      }\n      return ''\n    },\n    available() {\n      if (this.pool && this.pool.poolAssets) {\n        let amount = 0\n        if (Array.isArray(this.balance)) {\n          this.balance.forEach(x => {\n            if (x.denom === this.currentDenom) {\n              amount = x.amount\n            }\n          })\n        }\n        return formatTokenAmount(amount, 6, this.currentDenom)\n      }\n      return 0\n    },\n    fee() {\n      return percent(this.pool?.poolParams?.swapFee || '')\n    },\n  },\n  created() {\n    this.initialAddress()\n    this.$http.getBankBalances(this.address).then(res => {\n      if (res && res.length > 0) {\n        this.balance = res\n      }\n    })\n    this.$http.getAuthAccount(this.address, this.selectedChain).then(ret => {\n      if (ret.value.base_vesting_account) {\n        this.accountNumber = ret.value.base_vesting_account.base_account.account_number\n        this.sequence = ret.value.base_vesting_account.base_account.sequence\n        if (!this.sequence) this.sequence = 0\n      } else {\n        this.accountNumber = ret.value.account_number\n        this.sequence = ret.value.sequence ? ret.value.sequence : 0\n      }\n    })\n  },\n  methods: {\n    initialAddress() {\n      const { chain } = this.$route.params\n      const accounts = getLocalAccounts()\n      const current = this.$store.state.chains.defaultWallet\n      if (accounts && accounts[current]) {\n        const acc = accounts[current].address.find(x => x.chain === chain)\n        if (acc) {\n          this.address = acc.addr\n        }\n      }\n    },\n    formatAvailable() {\n    },\n    changeAmount() {\n      this.total = parseFloat((this.amount * this.price).toFixed(6))\n    },\n    changeTotal() {\n      this.amount = parseFloat((this.total / this.price).toFixed(6))\n    },\n    async sendTx() {\n      const tokenOutDenom = this.pool.poolAssets[this.type === 0 ? 0 : 1].token.denom\n      const { denom } = this.pool.poolAssets[this.type === 0 ? 1 : 0].token\n      const txMsgs = [\n        {\n          typeUrl: '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn',\n          value: {\n            sender: this.address,\n            routes: [\n              {\n                poolId: long_1.default.fromString(this.pool.id),\n                tokenOutDenom,\n              },\n            ],\n            tokenIn: {\n              denom,\n              amount: long_1.default.fromNumber(parseInt(this.amount * 1000000, 10)),\n            },\n            tokenOutMinAmount: long_1.default.fromNumber(parseInt(this.total * 1000000, 10)),\n          },\n        },\n      ]\n\n      if (txMsgs.length === 0) {\n        this.error = 'No delegation found'\n        this.dismissCountDown = this.dismissSecs\n        return ''\n      }\n      if (!this.accountNumber) {\n        this.error = 'Account number should not be empty!'\n        this.dismissCountDown = this.dismissSecs\n        return ''\n      }\n\n      const txFee = {\n        amount: [\n          {\n            amount: '800', // this.fee,\n            denom: 'uomos', // this.feeDenom,\n          },\n        ],\n        gas: '200000', // this.gas,\n      }\n\n      const signerData = {\n        accountNumber: this.accountNumber,\n        sequence: this.sequence,\n        chainId: this.chainId,\n      }\n\n      sign(\n        this.wallet,\n        this.chainId,\n        this.address,\n        txMsgs,\n        txFee,\n        'Sent Via https://owlstake.com',\n        signerData,\n      ).then(bodyBytes => {\n        this.$http.broadcastTx(bodyBytes).then(res => {\n          setLocalTxHistory({ op: 'swap', hash: res.tx_response.txhash, time: new Date() })\n          this.$toast({\n            component: ToastificationContent,\n            props: {\n              title: 'Transaction sent!',\n              icon: 'EditIcon',\n              variant: 'success',\n            },\n          })\n        }).catch(e => {\n          this.error = e\n        })\n      }).catch(e => {\n        this.error = e\n        this.dismissCountDown = this.dismissSecs\n      })\n      // Send tokens\n      // return client.sendTokens(this.address, this.recipient, sendCoins, this.memo)\n      return ''\n    },\n    countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}