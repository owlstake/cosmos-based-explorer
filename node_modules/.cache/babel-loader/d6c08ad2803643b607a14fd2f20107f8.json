{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BTableSimple, BTr, BTd, BBadge, BCardBody, BAlert } from 'bootstrap-vue';\nimport { toDay, tokenFormatter } from '@/libs/utils';\nimport ObjectFieldComponent from './ObjectFieldComponent.vue';\nexport default {\n  components: {\n    BAlert: BAlert,\n    BCard: BCard,\n    BCardBody: BCardBody,\n    BTableSimple: BTableSimple,\n    BTr: BTr,\n    BTd: BTd,\n    BBadge: BBadge,\n    ObjectFieldComponent: ObjectFieldComponent\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    var _this = this;\n\n    var hash = to.params.hash;\n\n    if (hash !== from.params.hash) {\n      this.error = null;\n      this.$http.getTxs(hash).then(function (res) {\n        _this.tx = res;\n      }).catch(function (err) {\n        _this.error = err;\n      });\n      next();\n    }\n  },\n  data: function data() {\n    return {\n      error: null,\n      tx: {\n        tx: {}\n      }\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    var hash = this.$route.params.hash;\n    this.$http.getTxs(hash).then(function (res) {\n      _this2.error = null;\n      _this2.tx = res;\n    }).catch(function (err) {\n      _this2.error = err;\n    });\n  },\n  methods: {\n    formattoken: function formattoken(v) {\n      return tokenFormatter(v);\n    },\n    formatTime: function formatTime(v) {\n      return toDay(v);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA,SACAA,KADA,EACAC,YADA,EACAC,GADA,EACAC,GADA,EACAC,MADA,EACAC,SADA,EACAC,MADA,QAEA,eAFA;AAGA;AACA;AAEA;EACAC;IACAD,cADA;IAEAN,YAFA;IAGAK,oBAHA;IAIAJ,0BAJA;IAKAC,QALA;IAMAC,QANA;IAOAC,cAPA;IAQAI;EARA,CADA;EAWAC,iBAXA,6BAWAC,EAXA,EAWAC,IAXA,EAWAC,IAXA,EAWA;IAAA;;IACA;;IACA;MACA;MACA;QACA;MACA,CAFA,EAEAC,KAFA,CAEA;QACA;MACA,CAJA;MAKAD;IACA;EACA,CAtBA;EAuBAE,IAvBA,kBAuBA;IACA;MACAC,WADA;MAEAC;QAAAA;MAAA;IAFA;EAIA,CA5BA;EA6BAC,OA7BA,qBA6BA;IAAA;;IACA;IACA;MACA;MACA;IACA,CAHA,EAGAJ,KAHA,CAGA;MACA;IACA,CALA;EAMA,CArCA;EAsCAK;IACAC;MAAA;IAAA,CADA;IAEAC;MAAA;IAAA;EAFA;AAtCA","names":["BCard","BTableSimple","BTr","BTd","BBadge","BCardBody","BAlert","components","ObjectFieldComponent","beforeRouteUpdate","to","from","next","catch","data","error","tx","created","methods","formattoken","formatTime"],"sourceRoot":"src/views","sources":["Transaction.vue"],"sourcesContent":["<template>\n  <div>\n    <b-alert\n      :show=\"error !== null\"\n      variant=\"danger\"\n    >\n      <h4 class=\"alert-heading\">\n        Error:\n      </h4>\n      <div class=\"alert-body\">\n        <span>Tx not found on chain. {{ error }}</span>\n      </div>\n    </b-alert>\n    <b-card\n      v-if=\"error===null\"\n      title=\"Basic\"\n      class=\"text-truncate\"\n    >\n      <object-field-component\n        v-if=\"!tx.std\"\n        :tablefield=\"tx.raw\"\n      />\n      <b-table-simple\n        v-else\n        striped\n        stacked=\"sm\"\n      >\n        <tbody>\n          <b-tr>\n            <b-td style=\"width:200px\">\n              {{ 'txhash' }}\n            </b-td><b-td\n              class=\"text-truncate\"\n            >{{ tx.txhash }}</b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'status' }}\n            </b-td><b-td class=\"text-wrap\"> <b-badge\n              v-if=\"tx.code===0\"\n              variant=\"light-success\"\n            >\n              Success\n            </b-badge><b-badge\n              v-else\n              variant=\"light-danger\"\n            >\n              Failed\n            </b-badge><b v-if=\"tx.code > 0\"> {{ tx.raw_log }}</b> </b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'height' }}\n            </b-td><b-td>\n              <router-link :to=\"`../blocks/${tx.height}`\">\n                {{ tx.height }}\n              </router-link></b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'timestamp' }}\n            </b-td><b-td>{{ formatTime(tx.timestamp) }}</b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'gas' }}\n            </b-td><b-td>{{ tx.gas_used }} / {{ tx.gas_wanted }}</b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'fee' }}\n            </b-td><b-td>{{ formattoken(tx.tx.fee) }}</b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'memo' }}\n            </b-td><b-td>{{ tx.tx.memo }}</b-td>\n          </b-tr>\n          <b-tr>\n            <b-td>\n              {{ 'timeout_height' }}\n            </b-td><b-td>{{ tx.tx.timeout_height }}</b-td>\n          </b-tr>\n        </tbody>\n      </b-table-simple>\n    </b-card>\n\n    <b-card\n      v-if=\"tx.tx.messages\"\n      :title=\"`Messages (total: ${tx.tx.messages.length})`\"\n      no-body\n    >\n      <b-card-body\n        v-for=\"(item, i) in tx.tx.messages \"\n        id=\"message\"\n        :key=\"i\"\n        class=\"message\"\n      >\n        <object-field-component :tablefield=\"item\" />\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport {\n  BCard, BTableSimple, BTr, BTd, BBadge, BCardBody, BAlert,\n} from 'bootstrap-vue'\nimport { toDay, tokenFormatter } from '@/libs/utils'\nimport ObjectFieldComponent from './ObjectFieldComponent.vue'\n\nexport default {\n  components: {\n    BAlert,\n    BCard,\n    BCardBody,\n    BTableSimple,\n    BTr,\n    BTd,\n    BBadge,\n    ObjectFieldComponent,\n  },\n  beforeRouteUpdate(to, from, next) {\n    const { hash } = to.params\n    if (hash !== from.params.hash) {\n      this.error = null\n      this.$http.getTxs(hash).then(res => {\n        this.tx = res\n      }).catch(err => {\n        this.error = err\n      })\n      next()\n    }\n  },\n  data() {\n    return {\n      error: null,\n      tx: { tx: {} },\n    }\n  },\n  created() {\n    const { hash } = this.$route.params\n    this.$http.getTxs(hash).then(res => {\n      this.error = null\n      this.tx = res\n    }).catch(err => {\n      this.error = err\n    })\n  },\n  methods: {\n    formattoken: v => tokenFormatter(v),\n    formatTime: v => toDay(v),\n  },\n}\n</script>\n\n<style>\n#message {\n    border-top-width: 2px;\n    border-top-style: double;\n}\n#message table.table-hover tr td:hover {\n  border-style: solid;\n  border-color: green;\n\n    border: double;\n    border-radius: 0.5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}