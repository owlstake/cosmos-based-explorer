{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BLink, BNavbarNav, BMedia, BMediaAside, BAvatar, BMediaBody, VBTooltip, BButton, BDropdown, BDropdownItem, BDropdownDivider } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport DarkToggler from '@core/layouts/components/app-navbar/components/DarkToggler.vue';\nimport Locale from '@core/layouts/components/app-navbar/components/Locale.vue';\nimport SearchBar from '@core/layouts/components/app-navbar/components/SearchBar.vue'; // import CartDropdown from '@core/layouts/components/app-navbar/components/CartDropdown.vue'\n\nimport { getLocalAccounts, timeIn, toDay } from '@/libs/utils'; // import UserDropdown from '@core/layouts/components/app-navbar/components/UserDropdown.vue'\n\nexport default {\n  components: {\n    BLink: BLink,\n    BNavbarNav: BNavbarNav,\n    BAvatar: BAvatar,\n    BMedia: BMedia,\n    BMediaAside: BMediaAside,\n    BMediaBody: BMediaBody,\n    BButton: BButton,\n    BDropdown: BDropdown,\n    BDropdownItem: BDropdownItem,\n    BDropdownDivider: BDropdownDivider,\n    // Navbar Components\n    DarkToggler: DarkToggler,\n    Locale: Locale,\n    SearchBar: SearchBar // CartDropdown,\n    // UserDropdown,\n\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple: Ripple\n  },\n  props: {\n    toggleVerticalMenuActive: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      variant: 'success',\n      tips: 'Synced',\n      index: 0,\n      chainid: ''\n    };\n  },\n  computed: {\n    walletName: function walletName() {\n      var _this$$store, _this$$store$state, _this$$store$state$ch;\n\n      var key = (_this$$store = this.$store) === null || _this$$store === void 0 ? void 0 : (_this$$store$state = _this$$store.state) === null || _this$$store$state === void 0 ? void 0 : (_this$$store$state$ch = _this$$store$state.chains) === null || _this$$store$state$ch === void 0 ? void 0 : _this$$store$state$ch.defaultWallet;\n      console.log('key', key);\n      return key || 'Wallet';\n    },\n    selected_chain: function selected_chain() {\n      this.block();\n      return this.$store.state.chains.selected;\n    },\n    chainVariant: function chainVariant() {\n      return this.variant;\n    },\n    currentApi: function currentApi() {\n      return this.index + 1 > this.apiOptions.length ? this.apiOptions[0] : this.apiOptions[this.index];\n    },\n    apiOptions: function apiOptions() {\n      var conf = this.$store.state.chains.selected;\n\n      if (Array.isArray(conf.api)) {\n        return conf.api;\n      }\n\n      return [conf.api];\n    },\n    accounts: function accounts() {\n      var _this = this;\n\n      var accounts = getLocalAccounts() || {};\n      accounts = Object.entries(accounts).map(function (v) {\n        return {\n          wallet: v[0],\n          address: v[1].address.find(function (x) {\n            return x.chain === _this.selected_chain.chain_name;\n          })\n        };\n      });\n\n      if (accounts.length > 0) {\n        this.updateDefaultWallet(accounts[0].wallet);\n      }\n\n      return accounts.filter(function (x) {\n        return x.address;\n      });\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    formatAddr: function formatAddr(v) {\n      return v.substring(0, 10).concat('...', v.substring(v.length - 10));\n    },\n    updateDefaultWallet: function updateDefaultWallet(v) {\n      this.$store.commit('setDefaultWallet', v);\n    },\n    change: function change(v) {\n      this.index = v;\n      var conf = this.$store.state.chains.selected;\n      localStorage.setItem(\"\".concat(conf.chain_name, \"-api-index\"), v);\n      window.location.reload();\n    },\n    block: function block() {\n      var _this2 = this;\n\n      var conf = this.$store.state.chains.selected;\n      var s = localStorage.getItem(\"\".concat(conf.chain_name, \"-api-index\")) || 0;\n      this.index = Number(s);\n      this.$store.commit('setHeight', 0);\n      this.$http.getLatestBlock().then(function (block) {\n        _this2.chainid = block.block.header.chain_id;\n\n        _this2.$store.commit('setHeight', Number(block.block.header.height));\n\n        if (timeIn(block.block.header.time, 1, 'm')) {\n          _this2.variant = 'danger';\n          _this2.tips = \"Halted \".concat(toDay(block.block.header.time, 'from'), \", Height: \").concat(_this2.$store.state.chains.height, \" \");\n        } else {\n          _this2.variant = 'success';\n          _this2.tips = 'Synced';\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA,SACAA,KADA,EACAC,UADA,EACAC,MADA,EACAC,WADA,EACAC,OADA,EACAC,UADA,EACAC,SADA,EACAC,OADA,EAEAC,SAFA,EAEAC,aAFA,EAEAC,gBAFA,QAGA,eAHA;AAIA;AACA;AACA;AACA,qF,CACA;;AACA,+D,CACA;;AAEA;EACAC;IACAX,YADA;IAEAC,sBAFA;IAGAG,gBAHA;IAIAF,cAJA;IAKAC,wBALA;IAMAE,sBANA;IAOAE,gBAPA;IAQAC,oBARA;IASAC,4BATA;IAUAC,kCAVA;IAYA;IACAE,wBAbA;IAcAC,cAdA;IAeAC,oBAfA,CAgBA;IACA;;EAjBA,CADA;EAoBAC;IACA,sBADA;IAEAC;EAFA,CApBA;EAwBAC;IACAC;MACAC,cADA;MAEAC;IAFA;EADA,CAxBA;EA8BAC,IA9BA,kBA8BA;IACA;MACAC,kBADA;MAEAC,cAFA;MAGAC,QAHA;MAIAC;IAJA;EAMA,CArCA;EAsCAC;IACAC,UADA,wBACA;MAAA;;MACA;MACAC;MACA;IACA,CALA;IAMAC,cANA,4BAMA;MACA;MACA;IACA,CATA;IAUAC,YAVA,0BAUA;MACA;IACA,CAZA;IAaAC,UAbA,wBAaA;MACA;IACA,CAfA;IAgBAC,UAhBA,wBAgBA;MACA;;MACA;QACA;MACA;;MACA;IACA,CAtBA;IAuBAC,QAvBA,sBAuBA;MAAA;;MACA;MACAA;QAAA;UAAAC;UAAAC;YAAA;UAAA;QAAA;MAAA;;MAEA;QACA;MACA;;MACA;QAAA;MAAA;IACA;EA/BA,CAtCA;EAuEAC,OAvEA,qBAuEA,CAEA,CAzEA;EA0EAC;IACAC,UADA,sBACAC,CADA,EACA;MACA;IACA,CAHA;IAIAC,mBAJA,+BAIAD,CAJA,EAIA;MACA;IACA,CANA;IAOAE,MAPA,kBAOAF,CAPA,EAOA;MACA;MACA;MACAG;MACAC;IACA,CAZA;IAaAC,KAbA,mBAaA;MAAA;;MACA;MACA;MACA;MACA;MACA;QACA;;QACA;;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;UACA;QACA;MACA,CAVA;IAWA;EA7BA;AA1EA","names":["BLink","BNavbarNav","BMedia","BMediaAside","BAvatar","BMediaBody","VBTooltip","BButton","BDropdown","BDropdownItem","BDropdownDivider","components","DarkToggler","Locale","SearchBar","directives","Ripple","props","toggleVerticalMenuActive","type","default","data","variant","tips","index","chainid","computed","walletName","console","selected_chain","chainVariant","currentApi","apiOptions","accounts","wallet","address","mounted","methods","formatAddr","v","updateDefaultWallet","change","localStorage","window","block"],"sourceRoot":"src/layouts/components","sources":["Navbar.vue"],"sourcesContent":["<template>\n  <div class=\"navbar-container d-flex content align-items-center\">\n\n    <!-- Nav Menu Toggler -->\n    <ul class=\"nav navbar-nav d-lg-none\">\n      <li class=\"nav-item\">\n        <b-link\n          class=\"nav-link\"\n          @click=\"toggleVerticalMenuActive\"\n        >\n          <b-avatar\n            v-if=\"selected_chain && selected_chain.logo\"\n            variant=\"transparent\"\n            rounded\n            size=\"21\"\n            :src=\"selected_chain.logo\"\n            class=\"badge-minimal\"\n          />\n          <feather-icon\n            v-else\n            icon=\"MenuIcon\"\n            size=\"21\"\n          />\n        </b-link>\n      </li>\n    </ul>\n\n    <!-- Left Col -->\n    <div class=\"bookmark-wrapper align-items-center flex-grow-1 d-none d-lg-flex\">\n      <b-media\n        v-if=\"selected_chain\"\n        no-body\n      >\n        <b-media-aside class=\"mr-75\">\n          <b-link\n            class=\"nav-link\"\n            @click=\"toggleVerticalMenuActive\"\n          >\n            <b-avatar\n              v-b-tooltip.hover.bottom=\"tips\"\n              variant=\"transparent\"\n              badge\n              rounded\n              size=\"42\"\n              :src=\"selected_chain.logo\"\n              class=\"badge-minimal\"\n              :badge-variant=\"variant\"\n            /></b-link>\n        </b-media-aside>\n        <b-media-body class=\"my-auto\">\n          <h6 class=\"mb-0 \">\n            <span class=\"text-uppercase\">{{ chainid || selected_chain.chain_name }}</span>\n          </h6>\n          <small id=\"data-provider\">\n           <!-- {{ currentApi }} ({{ selected_chain.sdk_version || '-' }})\n            <b-dropdown\n              class=\"ml-0\"\n              variant=\"flat-primary\"\n              no-caret\n              toggle-class=\"p-0\"\n              right\n              sm\n            >\n              <template #button-content>\n                <feather-icon\n                  icon=\"RepeatIcon\"\n                  size=\"12\"\n                  class=\"cursor-pointer\"\n                />\n              </template>\n              <b-dropdown-item\n                v-for=\"(item, i) in apiOptions\"\n                :key=\"item\"\n                @click=\"change(i)\"\n              >\n                {{ item }}\n              </b-dropdown-item>\n            </b-dropdown> -->\n          </small>\n        </b-media-body>\n      </b-media>\n    </div>\n\n    <!-- <dark-Toggler class=\"d-none d-lg-block\" /> -->\n    <!-- Right Col -->\n    <b-navbar-nav class=\"nav align-items-center ml-auto\">\n      <dark-Toggler class=\"d-none d-lg-block\" />\n      <search-bar />\n      <locale />\n      <b-dropdown\n        class=\"ml-1\"\n        variant=\"link\"\n        no-caret\n        toggle-class=\"p-0\"\n        right\n      >\n\n        <template #button-content>\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            class=\"btn-icon\"\n          >\n            <feather-icon icon=\"KeyIcon\" />\n            {{ walletName }}\n          </b-button>\n        </template>\n\n        <b-dropdown-item\n          v-for=\"(item,k) in accounts\"\n          :key=\"k\"\n          :disabled=\"!item.address\"\n          :to=\"`/${selected_chain.chain_name}/account/${item.address.addr}`\"\n          @click=\"updateDefaultWallet(item.wallet)\"\n        >\n          <div class=\"d-flex flex-column\">\n            <span class=\"font-weight-bolder\">{{ item.wallet }}\n              <b-avatar\n                v-if=\"item.wallet===walletName\"\n                variant=\"success\"\n                size=\"sm\"\n              >\n                <feather-icon icon=\"CheckIcon\" />\n              </b-avatar>\n            </span>\n            <small>{{ item.address ? formatAddr(item.address.addr) : `Not available on ${selected_chain.chain_name}` }}</small>\n          </div>\n        </b-dropdown-item>\n        <b-dropdown-divider />\n        <b-dropdown-item to=\"/wallet/import\">\n          <feather-icon\n            icon=\"PlusIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">Import Address</span>\n        </b-dropdown-item>\n        <b-dropdown-divider />\n\n        <b-dropdown-item :to=\"{ name: 'accounts' }\">\n          <feather-icon\n            icon=\"KeyIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">Accounts</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"{ name: 'delegations' }\">\n          <feather-icon\n            icon=\"BookOpenIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Delegations</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/${selected_chain.chain_name}/uptime/my`\">\n          <feather-icon\n            icon=\"AirplayIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Validators</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/wallet/votes`\">\n          <feather-icon\n            icon=\"PocketIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Votes</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/wallet/transactions`\">\n          <feather-icon\n            icon=\"LayersIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Transactions</span>\n        </b-dropdown-item>\n      </b-dropdown>\n    </b-navbar-nav>\n  </div>\n</template>\n\n<script>\nimport {\n  BLink, BNavbarNav, BMedia, BMediaAside, BAvatar, BMediaBody, VBTooltip, BButton,\n  BDropdown, BDropdownItem, BDropdownDivider,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport DarkToggler from '@core/layouts/components/app-navbar/components/DarkToggler.vue'\nimport Locale from '@core/layouts/components/app-navbar/components/Locale.vue'\nimport SearchBar from '@core/layouts/components/app-navbar/components/SearchBar.vue'\n// import CartDropdown from '@core/layouts/components/app-navbar/components/CartDropdown.vue'\nimport { getLocalAccounts, timeIn, toDay } from '@/libs/utils'\n// import UserDropdown from '@core/layouts/components/app-navbar/components/UserDropdown.vue'\n\nexport default {\n  components: {\n    BLink,\n    BNavbarNav,\n    BAvatar,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BButton,\n    BDropdown,\n    BDropdownItem,\n    BDropdownDivider,\n\n    // Navbar Components\n    DarkToggler,\n    Locale,\n    SearchBar,\n    // CartDropdown,\n    // UserDropdown,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  props: {\n    toggleVerticalMenuActive: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      variant: 'success',\n      tips: 'Synced',\n      index: 0,\n      chainid: '',\n    }\n  },\n  computed: {\n    walletName() {\n      const key = this.$store?.state?.chains?.defaultWallet\n      console.log('key', key)\n      return key || 'Wallet'\n    },\n    selected_chain() {\n      this.block()\n      return this.$store.state.chains.selected\n    },\n    chainVariant() {\n      return this.variant\n    },\n    currentApi() {\n      return this.index + 1 > this.apiOptions.length ? this.apiOptions[0] : this.apiOptions[this.index]\n    },\n    apiOptions() {\n      const conf = this.$store.state.chains.selected\n      if (Array.isArray(conf.api)) {\n        return conf.api\n      }\n      return [conf.api]\n    },\n    accounts() {\n      let accounts = getLocalAccounts() || {}\n      accounts = Object.entries(accounts).map(v => ({ wallet: v[0], address: v[1].address.find(x => x.chain === this.selected_chain.chain_name) }))\n\n      if (accounts.length > 0) {\n        this.updateDefaultWallet(accounts[0].wallet)\n      }\n      return accounts.filter(x => x.address)\n    },\n  },\n  mounted() {\n\n  },\n  methods: {\n    formatAddr(v) {\n      return v.substring(0, 10).concat('...', v.substring(v.length - 10))\n    },\n    updateDefaultWallet(v) {\n      this.$store.commit('setDefaultWallet', v)\n    },\n    change(v) {\n      this.index = v\n      const conf = this.$store.state.chains.selected\n      localStorage.setItem(`${conf.chain_name}-api-index`, v)\n      window.location.reload()\n    },\n    block() {\n      const conf = this.$store.state.chains.selected\n      const s = localStorage.getItem(`${conf.chain_name}-api-index`) || 0\n      this.index = Number(s)\n      this.$store.commit('setHeight', 0)\n      this.$http.getLatestBlock().then(block => {\n        this.chainid = block.block.header.chain_id\n        this.$store.commit('setHeight', Number(block.block.header.height))\n        if (timeIn(block.block.header.time, 1, 'm')) {\n          this.variant = 'danger'\n          this.tips = `Halted ${toDay(block.block.header.time, 'from')}, Height: ${this.$store.state.chains.height} `\n        } else {\n          this.variant = 'success'\n          this.tips = 'Synced'\n        }\n      })\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}