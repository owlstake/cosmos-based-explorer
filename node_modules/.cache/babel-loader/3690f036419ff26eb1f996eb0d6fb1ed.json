{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardTitle, BCardFooter, BButton, BProgressBar, BProgress, BBadge, BTooltip, BRow, BCol, VBModal } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport { percent, tokenFormatter } from '@/libs/utils';\nimport dayjs from 'dayjs';\nimport OperationModal from '@/views/components/OperationModal/index.vue';\nexport default {\n  components: {\n    BCard,\n    BButton,\n    BCardFooter,\n    BProgressBar,\n    BProgress,\n    BBadge,\n    BCardTitle,\n    BTooltip,\n    BRow,\n    BCol,\n    OperationModal\n  },\n  directives: {\n    'b-modal': VBModal,\n    Ripple\n  },\n\n  data() {\n    return {\n      selectedProposalId: 0,\n      selectedTitle: '',\n      proposals: [],\n      max: 1,\n      operationModalType: '',\n      next: ''\n    };\n  },\n\n  mounted() {\n    this.getList();\n  },\n\n  methods: {\n    formatType(v) {\n      const txt = String(v).replace('Proposal', '');\n      const index = txt.lastIndexOf('.');\n      return index > 0 ? txt.substring(index + 1) : txt;\n    },\n\n    percent: v => percent(v),\n    formatDate: v => dayjs(v).format('YYYY-MM-DD'),\n    formatToken: v => tokenFormatter(v, {}),\n\n    selectProposal(modal, pid, title) {\n      this.operationModalType = modal;\n      this.selectedProposalId = Number(pid);\n      this.selectedTitle = title;\n    },\n\n    getList() {\n      this.loading = true;\n      this.$http.getGovernanceList(this.next).then(res => {\n        this.proposals = this.proposals.concat(res.proposals);\n        this.updateTally(this.proposals);\n        this.next = res.pagination.next_key;\n        this.loading = false;\n      });\n    },\n\n    updateTally(res) {\n      const voting = res.filter(i => i.status === 2);\n\n      if (voting.length > 0) {\n        voting.forEach(p => this.$http.getGovernanceTally(p.id, 0).then(update => {\n          this.$set(p, 'tally', update);\n        }));\n      }\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}