{"ast":null,"code":"import \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BTableSimple, BTr, BTd, BTabs, BTab, BTbody } from 'bootstrap-vue';\nimport { abbr, getStakingValidatorByHex, isHexAddress, isStringArray, isToken, percent, tokenFormatter } from '@/libs/utils';\nimport VueMarkdown from 'vue-markdown';\nimport ArrayFieldComponent from './ArrayFieldComponent.vue';\nexport default {\n  name: 'ObjectFieldComponent',\n  components: {\n    BTableSimple: BTableSimple,\n    BTr: BTr,\n    BTd: BTd,\n    BTabs: BTabs,\n    BTab: BTab,\n    BTbody: BTbody,\n    ArrayFieldComponent: ArrayFieldComponent,\n    VueMarkdown: VueMarkdown\n  },\n  props: {\n    tablefield: {\n      type: [Array, Object],\n      default: function _default() {}\n    },\n    small: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      options: {\n        markdownIt: {\n          linkify: true\n        },\n        linkAttributes: {\n          attrs: {\n            target: '_blank',\n            rel: 'noopener'\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    formatObject: function formatObject(value) {\n      // console.log(value, typeof (value) === 'object', Object.keys(value))\n      // if (typeof (value) === 'object' && Object.keys(value).length === 1) {\n      //   console.log(value)\n      //   return value[Object.keys(value)[0]]\n      // }\n      return value;\n    },\n    isObjectText: function isObjectText(v) {\n      return String(v).startsWith('{') && String(v).endsWith('}');\n    },\n    toObject: function toObject(v) {\n      return JSON.parse(v);\n    },\n    formatText: function formatText(v) {\n      return abbr(v, 60);\n    },\n    eval_value: function eval_value(value) {\n      return Array.from(value);\n    },\n    isTokenField: function isTokenField(value) {\n      return isToken(value);\n    },\n    isHex: function isHex(value) {\n      return isHexAddress(value);\n    },\n    formatHexAddress: function formatHexAddress(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v);\n    },\n    isArrayText: function isArrayText(value) {\n      return isStringArray(value);\n    },\n    formatTokens: function formatTokens(value) {\n      return tokenFormatter(value);\n    },\n    addNewLine: function addNewLine(value) {\n      var percentage = /^0\\.\\d+/;\n\n      if (percentage.test(value)) {\n        return \"\".concat(percent(value), \"%\");\n      }\n\n      return value.replace(/(?:\\\\[rn])+/g, '\\n');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,SACAA,YADA,EACAC,GADA,EACAC,GADA,EACAC,KADA,EACAC,IADA,EACAC,MADA,QAEA,eAFA;AAGA,SACAC,IADA,EACAC,wBADA,EACAC,YADA,EACAC,aADA,EACAC,OADA,EACAC,OADA,EACAC,cADA,QAEA,cAFA;AAGA;AACA;AAEA;EACAC,4BADA;EAEAC;IACAd,0BADA;IAEAC,QAFA;IAGAC,QAHA;IAIAC,YAJA;IAKAC,UALA;IAMAC,cANA;IAOAU,wCAPA;IAQAC;EARA,CAFA;EAYAC;IACAC;MACAC,qBADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA;EALA,CAZA;EAsBAE,IAtBA,kBAsBA;IACA;MACAC;QACAC;UACAC;QADA,CADA;QAIAC;UACAC;YACAC,gBADA;YAEAC;UAFA;QADA;MAJA;IADA;EAaA,CApCA;EAqCAC;IACAC,YADA,wBACAC,KADA,EACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CARA;IASAC,YATA,wBASAC,CATA,EASA;MACA;IACA,CAXA;IAYAC,QAZA,oBAYAD,CAZA,EAYA;MACA;IACA,CAdA;IAeAE;MAAA;IAAA,CAfA;IAgBAC,UAhBA,sBAgBAL,KAhBA,EAgBA;MACA;IACA,CAlBA;IAmBAM,YAnBA,wBAmBAN,KAnBA,EAmBA;MACA;IACA,CArBA;IAsBAO,KAtBA,iBAsBAP,KAtBA,EAsBA;MACA;IACA,CAxBA;IAyBAQ,gBAzBA,4BAyBAN,CAzBA,EAyBA;MACA;IACA,CA3BA;IA4BAO,WA5BA,uBA4BAT,KA5BA,EA4BA;MACA;IACA,CA9BA;IA+BAU,YA/BA,wBA+BAV,KA/BA,EA+BA;MACA;IACA,CAjCA;IAkCAW,UAlCA,sBAkCAX,KAlCA,EAkCA;MACA;;MACA;QACA;MACA;;MACA;IACA;EAxCA;AArCA","names":["BTableSimple","BTr","BTd","BTabs","BTab","BTbody","abbr","getStakingValidatorByHex","isHexAddress","isStringArray","isToken","percent","tokenFormatter","name","components","ArrayFieldComponent","VueMarkdown","props","tablefield","type","default","small","data","options","markdownIt","linkify","linkAttributes","attrs","target","rel","methods","formatObject","value","isObjectText","v","toObject","formatText","eval_value","isTokenField","isHex","formatHexAddress","isArrayText","formatTokens","addNewLine"],"sourceRoot":"src/views","sources":["ObjectFieldComponent.vue"],"sourcesContent":["<template>\n  <b-table-simple\n    v-if=\"typeof tablefield === 'object'\"\n    hover\n    :small=\"small\"\n    striped\n    stacked=\"sm\"\n    responsive=\"sm\"\n  >\n    <b-tbody>\n      <b-tr\n        v-for=\"(value, name) in tablefield\"\n        :key=\"name\"\n      >\n        <b-td\n          style=\"text-transform: capitalize; vertical-align: top;\"\n        >\n          {{ name }}\n        </b-td>\n        <b-td v-if=\"isTokenField(value)\">\n          {{ formatTokens( value ) }}\n        </b-td>\n        <b-td v-else-if=\"isArrayText(value)\">\n          {{ value.join(', ') }}\n        </b-td>\n        <b-td v-else-if=\"isHex(value)\">\n          {{ formatHexAddress(value) }}\n        </b-td>\n        <b-td v-else-if=\"Array.isArray(value)\">\n          <array-field-component :tablefield=\"value\" />\n        </b-td>\n        <b-td\n          v-else-if=\"typeof (value) ==='object'\"\n          hover\n          class=\"overflow-hidden\"\n        >\n          <b-tabs\n            v-if=\"value\"\n            small\n          >\n            <b-tab\n              v-for=\"key in Object.keys(value)\"\n              :key=\"key\"\n              :title=\"key\"\n              class=\"pl-0 pr-0\"\n              title-item-class=\"bg-light-primary\"\n              style=\"padding: 0px;\"\n            >\n              <array-field-component\n                v-if=\"Array.isArray(value[key])\"\n                :tablefield=\"value[key]\"\n              />\n              <object-field-component\n                v-else-if=\"typeof value[key] === 'object'\"\n                :tablefield=\"value[key]\"\n              />\n              <object-field-component\n                v-else-if=\"isObjectText(value[key])\"\n                :tablefield=\"toObject(value[key])\"\n              />\n              <span v-else>{{ value[key] }}</span>\n            </b-tab>\n          </b-tabs>\n        </b-td>\n        <b-td v-else>\n          <VueMarkdown v-if=\"name==='description'\">\n            {{ addNewLine(value) }}\n          </VueMarkdown>\n          <span v-else>{{ value }}</span>\n        </b-td>\n      </b-tr>\n    </b-tbody>\n  </b-table-simple>\n</template>\n\n<script>\nimport {\n  BTableSimple, BTr, BTd, BTabs, BTab, BTbody,\n} from 'bootstrap-vue'\nimport {\n  abbr, getStakingValidatorByHex, isHexAddress, isStringArray, isToken, percent, tokenFormatter,\n} from '@/libs/utils'\nimport VueMarkdown from 'vue-markdown'\nimport ArrayFieldComponent from './ArrayFieldComponent.vue'\n\nexport default {\n  name: 'ObjectFieldComponent',\n  components: {\n    BTableSimple,\n    BTr,\n    BTd,\n    BTabs,\n    BTab,\n    BTbody,\n    ArrayFieldComponent,\n    VueMarkdown,\n  },\n  props: {\n    tablefield: {\n      type: [Array, Object],\n      default: () => {},\n    },\n    small: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      options: {\n        markdownIt: {\n          linkify: true,\n        },\n        linkAttributes: {\n          attrs: {\n            target: '_blank',\n            rel: 'noopener',\n          },\n        },\n      },\n    }\n  },\n  methods: {\n    formatObject(value) {\n      // console.log(value, typeof (value) === 'object', Object.keys(value))\n      // if (typeof (value) === 'object' && Object.keys(value).length === 1) {\n      //   console.log(value)\n      //   return value[Object.keys(value)[0]]\n      // }\n      return value\n    },\n    isObjectText(v) {\n      return String(v).startsWith('{') && String(v).endsWith('}')\n    },\n    toObject(v) {\n      return JSON.parse(v)\n    },\n    formatText: v => abbr(v, 60),\n    eval_value(value) {\n      return Array.from(value)\n    },\n    isTokenField(value) {\n      return isToken(value)\n    },\n    isHex(value) {\n      return isHexAddress(value)\n    },\n    formatHexAddress(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v)\n    },\n    isArrayText(value) {\n      return isStringArray(value)\n    },\n    formatTokens(value) {\n      return tokenFormatter(value)\n    },\n    addNewLine(value) {\n      const percentage = /^0\\.\\d+/\n      if (percentage.test(value)) {\n        return `${percent(value)}%`\n      }\n      return value.replace(/(?:\\\\[rn])+/g, '\\n')\n    },\n  },\n}\n</script>\n\n<style lang='css' scoped>\n@media (min-width: 768px) {\n  td:first-child { width: 20% ;}\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}